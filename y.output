State 141 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 PackageStmt: PACKAGE IDENT

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType FuncBlock

    9 FuncParameter: '(' ParameterList ')'

   10 FuncOpen: FUNC IDENT

   11 FuncBlock: FunctionUpBlock StatementList '}'

   12 FunctionUpBlock: '{'

   13 Expression: UnaryExpr
   14           | Expression binary_op Expression

   15 UnaryExpr: PrimaryExpr
   16          | unary_op UnaryExpr

   17 binary_op: LOR
   18          | LAND
   19          | cmp_op
   20          | add_op
   21          | mul_op

   22 cmp_op: EQ
   23       | NEQ
   24       | '<'
   25       | LEQ
   26       | '>'
   27       | GEQ

   28 add_op: '+'
   29       | '-'

   30 mul_op: '*'
   31       | '/'
   32       | '%'

   33 unary_op: '+'
   34         | '-'
   35         | '!'

   36 PrimaryExpr: Operand
   37            | IndexExpr
   38            | ConversionExpr

   39 IndexExpr: PrimaryExpr '[' Expression ']'

   40 Operand: Literal
   41        | IDENT
   42        | '(' Expression ')'

   43 Literal: INT_LIT
   44        | FLOAT_LIT
   45        | BOOL_LIT
   46        | '"' STRING_LIT '"'

   47 ConversionExpr: Type '(' Expression ')'

   48 Statement: DeclarationStmt NEWLINE
   49          | SimpleStmt NEWLINE
   50          | Block
   51          | IfStmt
   52          | ForStmt
   53          | SwitchStmt
   54          | CaseStmt
   55          | PrintStmt NEWLINE
   56          | ReturnStmt NEWLINE
   57          | NEWLINE

   58 SimpleStmt: AssignmentStmt
   59           | ExpressionStmt
   60           | IncDecStmt

   61 DeclarationStmt: VAR IDENT Type
   62                | VAR IDENT Type '=' Expression

   63 AssignmentStmt: Expression assign_op Expression

   64 assign_op: '='
   65          | ADD_ASSIGN
   66          | SUB_ASSIGN
   67          | MUL_ASSIGN
   68          | DIV_ASSIGN
   69          | MOD_ASSIGN

   70 ExpressionStmt: Expression

   71 IncDecStmt: Expression INC
   72           | Expression DEC

   73 Block: '{' StatementList '}'

   74 StatementList: Statement StatementList
   75              | Statement

   76 IfStmt: IF Condition Block
   77       | IF Condition Block ELSE IfStmt
   78       | IF Condition Block ELSE Block

   79 Condition: Expression

   80 ForStmt: FOR ForClause Block
   81        | FOR Condition Block

   82 ForClause: InitStmt ';' Condition ';' PostStmt

   83 InitStmt: SimpleStmt

   84 PostStmt: SimpleStmt

   85 SwitchStmt: SWITCH Expression Block

   86 CaseStmt: CASE INT_LIT ':' Block
   87         | DEFAULT ':' Block

   88 ReturnType: %empty
   89           | Type

   90 Type: INT
   91     | FLOAT
   92     | STRING
   93     | BOOL

   94 ParameterList: %empty
   95              | IDENT Type
   96              | ParameterList ',' IDENT Type

   97 ReturnStmt: RETURN Expression
   98           | RETURN

   99 PrintStmt: PRINT '(' Expression ')'
  100          | PRINTLN '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 35
'"' (34) 46
'%' (37) 32
'(' (40) 9 42 47 99 100
')' (41) 9 42 47 99 100
'*' (42) 30
'+' (43) 28 33
',' (44) 96
'-' (45) 29 34
'/' (47) 31
':' (58) 86 87
';' (59) 82
'<' (60) 24
'=' (61) 62 64
'>' (62) 26
'[' (91) 39
']' (93) 39
'{' (123) 12 73
'}' (125) 11 73
error (256)
VAR (258) 61 62
NEWLINE (259) 4 6 48 49 55 56 57
INT (260) 90
FLOAT (261) 91
BOOL (262) 93
STRING (263) 92
INC (264) 71
DEC (265) 72
GEQ (266) 27
LOR (267) 17
LAND (268) 18
EQ (269) 22
LEQ (270) 25
NEQ (271) 23
ADD_ASSIGN (272) 65
SUB_ASSIGN (273) 66
MUL_ASSIGN (274) 67
DIV_ASSIGN (275) 68
MOD_ASSIGN (276) 69
IF (277) 76 77 78
ELSE (278) 77 78
FOR (279) 80 81
SWITCH (280) 85
CASE (281) 86
FUNC (282) 10
PRINT (283) 99
PACKAGE (284) 7
RETURN (285) 97 98
PRINTLN (286) 100
DEFAULT (287) 87
INT_LIT (288) 43 86
STRING_LIT (289) 46
BOOL_LIT (290) 45
FLOAT_LIT (291) 44
IDENT (292) 7 10 41 61 62 95 96


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
Program (58)
    on left: 1, on right: 0
GlobalStatementList (59)
    on left: 2 3, on right: 1 2
GlobalStatement (60)
    on left: 4 5 6, on right: 2 3
PackageStmt (61)
    on left: 7, on right: 4
FunctionDeclStmt (62)
    on left: 8, on right: 5
FuncParameter (63)
    on left: 9, on right: 8
FuncOpen (64)
    on left: 10, on right: 8
FuncBlock (65)
    on left: 11, on right: 8
FunctionUpBlock (66)
    on left: 12, on right: 11
Expression (67)
    on left: 13 14, on right: 14 39 42 47 62 63 70 71 72 79 85 97 99
    100
UnaryExpr (68)
    on left: 15 16, on right: 13 16
binary_op (69)
    on left: 17 18 19 20 21, on right: 14
cmp_op (70)
    on left: 22 23 24 25 26 27, on right: 19
add_op (71)
    on left: 28 29, on right: 20
mul_op (72)
    on left: 30 31 32, on right: 21
unary_op (73)
    on left: 33 34 35, on right: 16
PrimaryExpr (74)
    on left: 36 37 38, on right: 15 39
IndexExpr (75)
    on left: 39, on right: 37
Operand (76)
    on left: 40 41 42, on right: 36
Literal (77)
    on left: 43 44 45 46, on right: 40
ConversionExpr (78)
    on left: 47, on right: 38
Statement (79)
    on left: 48 49 50 51 52 53 54 55 56 57, on right: 74 75
SimpleStmt (80)
    on left: 58 59 60, on right: 49 83 84
DeclarationStmt (81)
    on left: 61 62, on right: 48
AssignmentStmt (82)
    on left: 63, on right: 58
assign_op (83)
    on left: 64 65 66 67 68 69, on right: 63
ExpressionStmt (84)
    on left: 70, on right: 59
IncDecStmt (85)
    on left: 71 72, on right: 60
Block (86)
    on left: 73, on right: 50 76 77 78 80 81 85 86 87
StatementList (87)
    on left: 74 75, on right: 11 73 74
IfStmt (88)
    on left: 76 77 78, on right: 51 77
Condition (89)
    on left: 79, on right: 76 77 78 81 82
ForStmt (90)
    on left: 80 81, on right: 52
ForClause (91)
    on left: 82, on right: 80
InitStmt (92)
    on left: 83, on right: 82
PostStmt (93)
    on left: 84, on right: 82
SwitchStmt (94)
    on left: 85, on right: 53
CaseStmt (95)
    on left: 86 87, on right: 54
ReturnType (96)
    on left: 88 89, on right: 8
Type (97)
    on left: 90 91 92 93, on right: 47 61 62 89 95 96
ParameterList (98)
    on left: 94 95 96, on right: 9 96
ReturnStmt (99)
    on left: 97 98, on right: 56
PrintStmt (100)
    on left: 99 100, on right: 55


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

   10 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 10


State 3

    7 PackageStmt: PACKAGE . IDENT

    IDENT  shift, and go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FuncOpen . FuncParameter ReturnType FuncBlock

    '('  shift, and go to state 15

    FuncParameter  go to state 16


State 10

   10 FuncOpen: FUNC IDENT .

    $default  reduce using rule 10 (FuncOpen)


State 11

    7 PackageStmt: PACKAGE IDENT .

    $default  reduce using rule 7 (PackageStmt)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 15

    9 FuncParameter: '(' . ParameterList ')'

    IDENT  shift, and go to state 17

    $default  reduce using rule 94 (ParameterList)

    ParameterList  go to state 18


State 16

    8 FunctionDeclStmt: FuncOpen FuncParameter . ReturnType FuncBlock

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    $default  reduce using rule 88 (ReturnType)

    ReturnType  go to state 23
    Type        go to state 24


State 17

   95 ParameterList: IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 25


State 18

    9 FuncParameter: '(' ParameterList . ')'
   96 ParameterList: ParameterList . ',' IDENT Type

    ')'  shift, and go to state 26
    ','  shift, and go to state 27


State 19

   90 Type: INT .

    $default  reduce using rule 90 (Type)


State 20

   91 Type: FLOAT .

    $default  reduce using rule 91 (Type)


State 21

   93 Type: BOOL .

    $default  reduce using rule 93 (Type)


State 22

   92 Type: STRING .

    $default  reduce using rule 92 (Type)


State 23

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType . FuncBlock

    '{'  shift, and go to state 28

    FuncBlock        go to state 29
    FunctionUpBlock  go to state 30


State 24

   89 ReturnType: Type .

    $default  reduce using rule 89 (ReturnType)


State 25

   95 ParameterList: IDENT Type .

    $default  reduce using rule 95 (ParameterList)


State 26

    9 FuncParameter: '(' ParameterList ')' .

    $default  reduce using rule 9 (FuncParameter)


State 27

   96 ParameterList: ParameterList ',' . IDENT Type

    IDENT  shift, and go to state 31


State 28

   12 FunctionUpBlock: '{' .

    $default  reduce using rule 12 (FunctionUpBlock)


State 29

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType FuncBlock .

    $default  reduce using rule 8 (FunctionDeclStmt)


State 30

   11 FuncBlock: FunctionUpBlock . StatementList '}'

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression       go to state 52
    UnaryExpr        go to state 53
    unary_op         go to state 54
    PrimaryExpr      go to state 55
    IndexExpr        go to state 56
    Operand          go to state 57
    Literal          go to state 58
    ConversionExpr   go to state 59
    Statement        go to state 60
    SimpleStmt       go to state 61
    DeclarationStmt  go to state 62
    AssignmentStmt   go to state 63
    ExpressionStmt   go to state 64
    IncDecStmt       go to state 65
    Block            go to state 66
    StatementList    go to state 67
    IfStmt           go to state 68
    ForStmt          go to state 69
    SwitchStmt       go to state 70
    CaseStmt         go to state 71
    Type             go to state 72
    ReturnStmt       go to state 73
    PrintStmt        go to state 74


State 31

   96 ParameterList: ParameterList ',' IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 75


State 32

   61 DeclarationStmt: VAR . IDENT Type
   62                | VAR . IDENT Type '=' Expression

    IDENT  shift, and go to state 76


State 33

   57 Statement: NEWLINE .

    $default  reduce using rule 57 (Statement)


State 34

   76 IfStmt: IF . Condition Block
   77       | IF . Condition Block ELSE IfStmt
   78       | IF . Condition Block ELSE Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 77
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Condition       go to state 78
    Type            go to state 72


State 35

   80 ForStmt: FOR . ForClause Block
   81        | FOR . Condition Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 79
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    SimpleStmt      go to state 80
    AssignmentStmt  go to state 63
    ExpressionStmt  go to state 64
    IncDecStmt      go to state 65
    Condition       go to state 81
    ForClause       go to state 82
    InitStmt        go to state 83
    Type            go to state 72


State 36

   85 SwitchStmt: SWITCH . Expression Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 84
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 37

   86 CaseStmt: CASE . INT_LIT ':' Block

    INT_LIT  shift, and go to state 85


State 38

   99 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 86


State 39

   97 ReturnStmt: RETURN . Expression
   98           | RETURN .

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 98 (ReturnStmt)

    Expression      go to state 87
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 40

  100 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 88


State 41

   87 CaseStmt: DEFAULT . ':' Block

    ':'  shift, and go to state 89


State 42

   43 Literal: INT_LIT .

    $default  reduce using rule 43 (Literal)


State 43

   45 Literal: BOOL_LIT .

    $default  reduce using rule 45 (Literal)


State 44

   44 Literal: FLOAT_LIT .

    $default  reduce using rule 44 (Literal)


State 45

   41 Operand: IDENT .

    $default  reduce using rule 41 (Operand)


State 46

   42 Operand: '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 90
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 47

   73 Block: '{' . StatementList '}'

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression       go to state 52
    UnaryExpr        go to state 53
    unary_op         go to state 54
    PrimaryExpr      go to state 55
    IndexExpr        go to state 56
    Operand          go to state 57
    Literal          go to state 58
    ConversionExpr   go to state 59
    Statement        go to state 60
    SimpleStmt       go to state 61
    DeclarationStmt  go to state 62
    AssignmentStmt   go to state 63
    ExpressionStmt   go to state 64
    IncDecStmt       go to state 65
    Block            go to state 66
    StatementList    go to state 91
    IfStmt           go to state 68
    ForStmt          go to state 69
    SwitchStmt       go to state 70
    CaseStmt         go to state 71
    Type             go to state 72
    ReturnStmt       go to state 73
    PrintStmt        go to state 74


State 48

   33 unary_op: '+' .

    $default  reduce using rule 33 (unary_op)


State 49

   34 unary_op: '-' .

    $default  reduce using rule 34 (unary_op)


State 50

   35 unary_op: '!' .

    $default  reduce using rule 35 (unary_op)


State 51

   46 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 92


State 52

   14 Expression: Expression . binary_op Expression
   63 AssignmentStmt: Expression . assign_op Expression
   70 ExpressionStmt: Expression .
   71 IncDecStmt: Expression . INC
   72           | Expression . DEC

    INC         shift, and go to state 93
    DEC         shift, and go to state 94
    GEQ         shift, and go to state 95
    LOR         shift, and go to state 96
    LAND        shift, and go to state 97
    EQ          shift, and go to state 98
    LEQ         shift, and go to state 99
    NEQ         shift, and go to state 100
    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    DIV_ASSIGN  shift, and go to state 104
    MOD_ASSIGN  shift, and go to state 105
    '<'         shift, and go to state 106
    '>'         shift, and go to state 107
    '+'         shift, and go to state 108
    '-'         shift, and go to state 109
    '*'         shift, and go to state 110
    '/'         shift, and go to state 111
    '%'         shift, and go to state 112
    '='         shift, and go to state 113

    $default  reduce using rule 70 (ExpressionStmt)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117
    assign_op  go to state 118


State 53

   13 Expression: UnaryExpr .

    $default  reduce using rule 13 (Expression)


State 54

   16 UnaryExpr: unary_op . UnaryExpr

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr       go to state 119
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 55

   15 UnaryExpr: PrimaryExpr .
   39 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 120

    $default  reduce using rule 15 (UnaryExpr)


State 56

   37 PrimaryExpr: IndexExpr .

    $default  reduce using rule 37 (PrimaryExpr)


State 57

   36 PrimaryExpr: Operand .

    $default  reduce using rule 36 (PrimaryExpr)


State 58

   40 Operand: Literal .

    $default  reduce using rule 40 (Operand)


State 59

   38 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 38 (PrimaryExpr)


State 60

   74 StatementList: Statement . StatementList
   75              | Statement .

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 75 (StatementList)

    Expression       go to state 52
    UnaryExpr        go to state 53
    unary_op         go to state 54
    PrimaryExpr      go to state 55
    IndexExpr        go to state 56
    Operand          go to state 57
    Literal          go to state 58
    ConversionExpr   go to state 59
    Statement        go to state 60
    SimpleStmt       go to state 61
    DeclarationStmt  go to state 62
    AssignmentStmt   go to state 63
    ExpressionStmt   go to state 64
    IncDecStmt       go to state 65
    Block            go to state 66
    StatementList    go to state 121
    IfStmt           go to state 68
    ForStmt          go to state 69
    SwitchStmt       go to state 70
    CaseStmt         go to state 71
    Type             go to state 72
    ReturnStmt       go to state 73
    PrintStmt        go to state 74


State 61

   49 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 122


State 62

   48 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 123


State 63

   58 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 58 (SimpleStmt)


State 64

   59 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 59 (SimpleStmt)


State 65

   60 SimpleStmt: IncDecStmt .

    $default  reduce using rule 60 (SimpleStmt)


State 66

   50 Statement: Block .

    $default  reduce using rule 50 (Statement)


State 67

   11 FuncBlock: FunctionUpBlock StatementList . '}'

    '}'  shift, and go to state 124


State 68

   51 Statement: IfStmt .

    $default  reduce using rule 51 (Statement)


State 69

   52 Statement: ForStmt .

    $default  reduce using rule 52 (Statement)


State 70

   53 Statement: SwitchStmt .

    $default  reduce using rule 53 (Statement)


State 71

   54 Statement: CaseStmt .

    $default  reduce using rule 54 (Statement)


State 72

   47 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 125


State 73

   56 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 126


State 74

   55 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 127


State 75

   96 ParameterList: ParameterList ',' IDENT Type .

    $default  reduce using rule 96 (ParameterList)


State 76

   61 DeclarationStmt: VAR IDENT . Type
   62                | VAR IDENT . Type '=' Expression

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 128


State 77

   14 Expression: Expression . binary_op Expression
   79 Condition: Expression .

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    $default  reduce using rule 79 (Condition)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 78

   76 IfStmt: IF Condition . Block
   77       | IF Condition . Block ELSE IfStmt
   78       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 47

    Block  go to state 129


State 79

   14 Expression: Expression . binary_op Expression
   63 AssignmentStmt: Expression . assign_op Expression
   70 ExpressionStmt: Expression .
   71 IncDecStmt: Expression . INC
   72           | Expression . DEC
   79 Condition: Expression .

    INC         shift, and go to state 93
    DEC         shift, and go to state 94
    GEQ         shift, and go to state 95
    LOR         shift, and go to state 96
    LAND        shift, and go to state 97
    EQ          shift, and go to state 98
    LEQ         shift, and go to state 99
    NEQ         shift, and go to state 100
    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    DIV_ASSIGN  shift, and go to state 104
    MOD_ASSIGN  shift, and go to state 105
    '<'         shift, and go to state 106
    '>'         shift, and go to state 107
    '+'         shift, and go to state 108
    '-'         shift, and go to state 109
    '*'         shift, and go to state 110
    '/'         shift, and go to state 111
    '%'         shift, and go to state 112
    '='         shift, and go to state 113

    '{'       reduce using rule 79 (Condition)
    $default  reduce using rule 70 (ExpressionStmt)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117
    assign_op  go to state 118


State 80

   83 InitStmt: SimpleStmt .

    $default  reduce using rule 83 (InitStmt)


State 81

   81 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 47

    Block  go to state 130


State 82

   80 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 47

    Block  go to state 131


State 83

   82 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 132


State 84

   14 Expression: Expression . binary_op Expression
   85 SwitchStmt: SWITCH Expression . Block

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '{'   shift, and go to state 47
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117
    Block      go to state 133


State 85

   86 CaseStmt: CASE INT_LIT . ':' Block

    ':'  shift, and go to state 134


State 86

   99 PrintStmt: PRINT '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 135
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 87

   14 Expression: Expression . binary_op Expression
   97 ReturnStmt: RETURN Expression .

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    $default  reduce using rule 97 (ReturnStmt)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 88

  100 PrintStmt: PRINTLN '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 136
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 89

   87 CaseStmt: DEFAULT ':' . Block

    '{'  shift, and go to state 47

    Block  go to state 137


State 90

   14 Expression: Expression . binary_op Expression
   42 Operand: '(' Expression . ')'

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    ')'   shift, and go to state 138
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 91

   73 Block: '{' StatementList . '}'

    '}'  shift, and go to state 139


State 92

   46 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 140


State 93

   71 IncDecStmt: Expression INC .

    $default  reduce using rule 71 (IncDecStmt)


State 94

   72 IncDecStmt: Expression DEC .

    $default  reduce using rule 72 (IncDecStmt)


State 95

   27 cmp_op: GEQ .

    $default  reduce using rule 27 (cmp_op)


State 96

   17 binary_op: LOR .

    $default  reduce using rule 17 (binary_op)


State 97

   18 binary_op: LAND .

    $default  reduce using rule 18 (binary_op)


State 98

   22 cmp_op: EQ .

    $default  reduce using rule 22 (cmp_op)


State 99

   25 cmp_op: LEQ .

    $default  reduce using rule 25 (cmp_op)


State 100

   23 cmp_op: NEQ .

    $default  reduce using rule 23 (cmp_op)


State 101

   65 assign_op: ADD_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 102

   66 assign_op: SUB_ASSIGN .

    $default  reduce using rule 66 (assign_op)


State 103

   67 assign_op: MUL_ASSIGN .

    $default  reduce using rule 67 (assign_op)


State 104

   68 assign_op: DIV_ASSIGN .

    $default  reduce using rule 68 (assign_op)


State 105

   69 assign_op: MOD_ASSIGN .

    $default  reduce using rule 69 (assign_op)


State 106

   24 cmp_op: '<' .

    $default  reduce using rule 24 (cmp_op)


State 107

   26 cmp_op: '>' .

    $default  reduce using rule 26 (cmp_op)


State 108

   28 add_op: '+' .

    $default  reduce using rule 28 (add_op)


State 109

   29 add_op: '-' .

    $default  reduce using rule 29 (add_op)


State 110

   30 mul_op: '*' .

    $default  reduce using rule 30 (mul_op)


State 111

   31 mul_op: '/' .

    $default  reduce using rule 31 (mul_op)


State 112

   32 mul_op: '%' .

    $default  reduce using rule 32 (mul_op)


State 113

   64 assign_op: '=' .

    $default  reduce using rule 64 (assign_op)


State 114

   14 Expression: Expression binary_op . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 141
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 115

   19 binary_op: cmp_op .

    $default  reduce using rule 19 (binary_op)


State 116

   20 binary_op: add_op .

    $default  reduce using rule 20 (binary_op)


State 117

   21 binary_op: mul_op .

    $default  reduce using rule 21 (binary_op)


State 118

   63 AssignmentStmt: Expression assign_op . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 142
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 119

   16 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 16 (UnaryExpr)


State 120

   39 IndexExpr: PrimaryExpr '[' . Expression ']'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 143
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 121

   74 StatementList: Statement StatementList .

    $default  reduce using rule 74 (StatementList)


State 122

   49 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 49 (Statement)


State 123

   48 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 48 (Statement)


State 124

   11 FuncBlock: FunctionUpBlock StatementList '}' .

    $default  reduce using rule 11 (FuncBlock)


State 125

   47 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 144
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 126

   56 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 56 (Statement)


State 127

   55 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 55 (Statement)


State 128

   61 DeclarationStmt: VAR IDENT Type .
   62                | VAR IDENT Type . '=' Expression

    '='  shift, and go to state 145

    $default  reduce using rule 61 (DeclarationStmt)


State 129

   76 IfStmt: IF Condition Block .
   77       | IF Condition Block . ELSE IfStmt
   78       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 146

    $default  reduce using rule 76 (IfStmt)


State 130

   81 ForStmt: FOR Condition Block .

    $default  reduce using rule 81 (ForStmt)


State 131

   80 ForStmt: FOR ForClause Block .

    $default  reduce using rule 80 (ForStmt)


State 132

   82 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 77
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Condition       go to state 147
    Type            go to state 72


State 133

   85 SwitchStmt: SWITCH Expression Block .

    $default  reduce using rule 85 (SwitchStmt)


State 134

   86 CaseStmt: CASE INT_LIT ':' . Block

    '{'  shift, and go to state 47

    Block  go to state 148


State 135

   14 Expression: Expression . binary_op Expression
   99 PrintStmt: PRINT '(' Expression . ')'

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    ')'   shift, and go to state 149
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 136

   14 Expression: Expression . binary_op Expression
  100 PrintStmt: PRINTLN '(' Expression . ')'

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    ')'   shift, and go to state 150
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 137

   87 CaseStmt: DEFAULT ':' Block .

    $default  reduce using rule 87 (CaseStmt)


State 138

   42 Operand: '(' Expression ')' .

    $default  reduce using rule 42 (Operand)


State 139

   73 Block: '{' StatementList '}' .

    $default  reduce using rule 73 (Block)


State 140

   46 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 46 (Literal)


State 141

   14 Expression: Expression . binary_op Expression
   14           | Expression binary_op Expression .

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    GEQ       [reduce using rule 14 (Expression)]
    LOR       [reduce using rule 14 (Expression)]
    LAND      [reduce using rule 14 (Expression)]
    EQ        [reduce using rule 14 (Expression)]
    LEQ       [reduce using rule 14 (Expression)]
    NEQ       [reduce using rule 14 (Expression)]
    '<'       [reduce using rule 14 (Expression)]
    '>'       [reduce using rule 14 (Expression)]
    '+'       [reduce using rule 14 (Expression)]
    '-'       [reduce using rule 14 (Expression)]
    '*'       [reduce using rule 14 (Expression)]
    '/'       [reduce using rule 14 (Expression)]
    '%'       [reduce using rule 14 (Expression)]
    $default  reduce using rule 14 (Expression)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 142

   14 Expression: Expression . binary_op Expression
   63 AssignmentStmt: Expression assign_op Expression .

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    $default  reduce using rule 63 (AssignmentStmt)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 143

   14 Expression: Expression . binary_op Expression
   39 IndexExpr: PrimaryExpr '[' Expression . ']'

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112
    ']'   shift, and go to state 151

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 144

   14 Expression: Expression . binary_op Expression
   47 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    ')'   shift, and go to state 152
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 145

   62 DeclarationStmt: VAR IDENT Type '=' . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 153
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    Type            go to state 72


State 146

   77 IfStmt: IF Condition Block ELSE . IfStmt
   78       | IF Condition Block ELSE . Block

    IF   shift, and go to state 34
    '{'  shift, and go to state 47

    Block   go to state 154
    IfStmt  go to state 155


State 147

   82 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 156


State 148

   86 CaseStmt: CASE INT_LIT ':' Block .

    $default  reduce using rule 86 (CaseStmt)


State 149

   99 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 99 (PrintStmt)


State 150

  100 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 100 (PrintStmt)


State 151

   39 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 39 (IndexExpr)


State 152

   47 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 47 (ConversionExpr)


State 153

   14 Expression: Expression . binary_op Expression
   62 DeclarationStmt: VAR IDENT Type '=' Expression .

    GEQ   shift, and go to state 95
    LOR   shift, and go to state 96
    LAND  shift, and go to state 97
    EQ    shift, and go to state 98
    LEQ   shift, and go to state 99
    NEQ   shift, and go to state 100
    '<'   shift, and go to state 106
    '>'   shift, and go to state 107
    '+'   shift, and go to state 108
    '-'   shift, and go to state 109
    '*'   shift, and go to state 110
    '/'   shift, and go to state 111
    '%'   shift, and go to state 112

    $default  reduce using rule 62 (DeclarationStmt)

    binary_op  go to state 114
    cmp_op     go to state 115
    add_op     go to state 116
    mul_op     go to state 117


State 154

   78 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 78 (IfStmt)


State 155

   77 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 77 (IfStmt)


State 156

   82 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 52
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    IndexExpr       go to state 56
    Operand         go to state 57
    Literal         go to state 58
    ConversionExpr  go to state 59
    SimpleStmt      go to state 157
    AssignmentStmt  go to state 63
    ExpressionStmt  go to state 64
    IncDecStmt      go to state 65
    PostStmt        go to state 158
    Type            go to state 72


State 157

   84 PostStmt: SimpleStmt .

    $default  reduce using rule 84 (PostStmt)


State 158

   82 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 82 (ForClause)
