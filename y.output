State 125 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 PackageStmt: PACKAGE IDENT

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType FuncBlock

    9 FuncParameter: '(' ParameterList ')'

   10 FuncOpen: FUNC IDENT

   11 FuncBlock: FunctionUpBlock StatementList '}'

   12 FunctionUpBlock: '{'

   13 UnaryExpr: PrimaryExpr
   14          | UnaryExpr INC
   15          | UnaryExpr DEC
   16          | unary_op cast_expression

   17 cast_expression: UnaryExpr
   18                | '(' Type ')' cast_expression

   19 multiplicative_expression: cast_expression
   20                          | multiplicative_expression mul_op cast_expression

   21 additive_expression: multiplicative_expression
   22                    | additive_expression add_op multiplicative_expression

   23 relational_expression: additive_expression
   24                      | relational_expression rel_op additive_expression

   25 equality_expression: relational_expression
   26                    | equality_expression equ_op relational_expression

   27 logical_and_expression: equality_expression
   28                       | logical_and_expression LAND equality_expression

   29 logical_or_expression: logical_and_expression
   30                      | logical_or_expression LOR logical_and_expression

   31 assignment_expression: logical_or_expression
   32                      | UnaryExpr assign_op assignment_expression

   33 Expression: assignment_expression

   34 rel_op: '<'
   35       | LEQ
   36       | '>'
   37       | GEQ

   38 equ_op: EQ
   39       | NEQ

   40 add_op: '+'
   41       | '-'

   42 mul_op: '*'
   43       | '/'
   44       | '%'

   45 unary_op: '+'
   46         | '-'
   47         | '!'

   48 PrimaryExpr: Operand
   49            | ConversionExpr

   50 Operand: Literal
   51        | IDENT
   52        | '(' Expression ')'

   53 Literal: INT_LIT
   54        | FLOAT_LIT
   55        | BOOL_LIT
   56        | '"' STRING_LIT '"'

   57 ConversionExpr: Type '(' Expression ')'

   58 Statement: DeclarationStmt NEWLINE
   59          | SimpleStmt NEWLINE
   60          | Block
   61          | IfStmt
   62          | ForStmt
   63          | SwitchStmt
   64          | CaseStmt
   65          | PrintStmt NEWLINE
   66          | ReturnStmt NEWLINE
   67          | NEWLINE

   68 SimpleStmt: ExpressionStmt

   69 DeclarationStmt: VAR IDENT Type
   70                | VAR IDENT Type '=' Expression

   71 assign_op: '='
   72          | ADD_ASSIGN
   73          | SUB_ASSIGN
   74          | MUL_ASSIGN
   75          | DIV_ASSIGN
   76          | MOD_ASSIGN

   77 ExpressionStmt: Expression

   78 Block: BlockUp StatementList '}'

   79 BlockUp: '{'

   80 StatementList: Statement StatementList
   81              | Statement

   82 IfStmt: IF Condition Block
   83       | IF Condition Block ELSE IfStmt
   84       | IF Condition Block ELSE Block

   85 Condition: Expression

   86 ForStmt: FOR ForClause Block
   87        | FOR Condition Block

   88 ForClause: InitStmt ';' Condition ';' PostStmt

   89 InitStmt: SimpleStmt

   90 PostStmt: SimpleStmt

   91 SwitchStmt: SWITCH Expression Block

   92 CaseStmt: CASE INT_LIT ':' Block
   93         | DEFAULT ':' Block

   94 ReturnType: %empty
   95           | Type

   96 Type: INT
   97     | FLOAT
   98     | STRING
   99     | BOOL

  100 ParameterList: %empty
  101              | IDENT Type
  102              | ParameterList ',' IDENT Type

  103 ReturnStmt: RETURN Expression
  104           | RETURN

  105 PrintStmt: PRINT '(' Expression ')'
  106          | PRINTLN '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 47
'"' (34) 56
'%' (37) 44
'(' (40) 9 18 52 57 105 106
')' (41) 9 18 52 57 105 106
'*' (42) 42
'+' (43) 40 45
',' (44) 102
'-' (45) 41 46
'/' (47) 43
':' (58) 92 93
';' (59) 88
'<' (60) 34
'=' (61) 70 71
'>' (62) 36
'{' (123) 12 79
'}' (125) 11 78
error (256)
VAR (258) 69 70
NEWLINE (259) 4 6 58 59 65 66 67
INT (260) 96
FLOAT (261) 97
BOOL (262) 99
STRING (263) 98
INC (264) 14
DEC (265) 15
GEQ (266) 37
LOR (267) 30
LAND (268) 28
EQ (269) 38
LEQ (270) 35
NEQ (271) 39
ADD_ASSIGN (272) 72
SUB_ASSIGN (273) 73
MUL_ASSIGN (274) 74
DIV_ASSIGN (275) 75
MOD_ASSIGN (276) 76
IF (277) 82 83 84
ELSE (278) 83 84
FOR (279) 86 87
SWITCH (280) 91
CASE (281) 92
FUNC (282) 10
PRINT (283) 105
PACKAGE (284) 7
RETURN (285) 103 104
PRINTLN (286) 106
DEFAULT (287) 93
INT_LIT (288) 53 92
STRING_LIT (289) 56
BOOL_LIT (290) 55
FLOAT_LIT (291) 54
IDENT (292) 7 10 51 69 70 101 102


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
Program (56)
    on left: 1, on right: 0
GlobalStatementList (57)
    on left: 2 3, on right: 1 2
GlobalStatement (58)
    on left: 4 5 6, on right: 2 3
PackageStmt (59)
    on left: 7, on right: 4
FunctionDeclStmt (60)
    on left: 8, on right: 5
FuncParameter (61)
    on left: 9, on right: 8
FuncOpen (62)
    on left: 10, on right: 8
FuncBlock (63)
    on left: 11, on right: 8
FunctionUpBlock (64)
    on left: 12, on right: 11
UnaryExpr (65)
    on left: 13 14 15 16, on right: 14 15 17 32
cast_expression (66)
    on left: 17 18, on right: 16 18 19 20
multiplicative_expression (67)
    on left: 19 20, on right: 20 21 22
additive_expression (68)
    on left: 21 22, on right: 22 23 24
relational_expression (69)
    on left: 23 24, on right: 24 25 26
equality_expression (70)
    on left: 25 26, on right: 26 27 28
logical_and_expression (71)
    on left: 27 28, on right: 28 29 30
logical_or_expression (72)
    on left: 29 30, on right: 30 31
assignment_expression (73)
    on left: 31 32, on right: 32 33
Expression (74)
    on left: 33, on right: 52 57 70 77 85 91 103 105 106
rel_op (75)
    on left: 34 35 36 37, on right: 24
equ_op (76)
    on left: 38 39, on right: 26
add_op (77)
    on left: 40 41, on right: 22
mul_op (78)
    on left: 42 43 44, on right: 20
unary_op (79)
    on left: 45 46 47, on right: 16
PrimaryExpr (80)
    on left: 48 49, on right: 13
Operand (81)
    on left: 50 51 52, on right: 48
Literal (82)
    on left: 53 54 55 56, on right: 50
ConversionExpr (83)
    on left: 57, on right: 49
Statement (84)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 80 81
SimpleStmt (85)
    on left: 68, on right: 59 89 90
DeclarationStmt (86)
    on left: 69 70, on right: 58
assign_op (87)
    on left: 71 72 73 74 75 76, on right: 32
ExpressionStmt (88)
    on left: 77, on right: 68
Block (89)
    on left: 78, on right: 60 82 83 84 86 87 91 92 93
BlockUp (90)
    on left: 79, on right: 78
StatementList (91)
    on left: 80 81, on right: 11 78 80
IfStmt (92)
    on left: 82 83 84, on right: 61 83
Condition (93)
    on left: 85, on right: 82 83 84 87 88
ForStmt (94)
    on left: 86 87, on right: 62
ForClause (95)
    on left: 88, on right: 86
InitStmt (96)
    on left: 89, on right: 88
PostStmt (97)
    on left: 90, on right: 88
SwitchStmt (98)
    on left: 91, on right: 63
CaseStmt (99)
    on left: 92 93, on right: 64
ReturnType (100)
    on left: 94 95, on right: 8
Type (101)
    on left: 96 97 98 99, on right: 18 57 69 70 95 101 102
ParameterList (102)
    on left: 100 101 102, on right: 9 102
ReturnStmt (103)
    on left: 103 104, on right: 66
PrintStmt (104)
    on left: 105 106, on right: 65


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

   10 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 10


State 3

    7 PackageStmt: PACKAGE . IDENT

    IDENT  shift, and go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FuncOpen . FuncParameter ReturnType FuncBlock

    '('  shift, and go to state 15

    FuncParameter  go to state 16


State 10

   10 FuncOpen: FUNC IDENT .

    $default  reduce using rule 10 (FuncOpen)


State 11

    7 PackageStmt: PACKAGE IDENT .

    $default  reduce using rule 7 (PackageStmt)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 15

    9 FuncParameter: '(' . ParameterList ')'

    IDENT  shift, and go to state 17

    $default  reduce using rule 100 (ParameterList)

    ParameterList  go to state 18


State 16

    8 FunctionDeclStmt: FuncOpen FuncParameter . ReturnType FuncBlock

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    $default  reduce using rule 94 (ReturnType)

    ReturnType  go to state 23
    Type        go to state 24


State 17

  101 ParameterList: IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 25


State 18

    9 FuncParameter: '(' ParameterList . ')'
  102 ParameterList: ParameterList . ',' IDENT Type

    ')'  shift, and go to state 26
    ','  shift, and go to state 27


State 19

   96 Type: INT .

    $default  reduce using rule 96 (Type)


State 20

   97 Type: FLOAT .

    $default  reduce using rule 97 (Type)


State 21

   99 Type: BOOL .

    $default  reduce using rule 99 (Type)


State 22

   98 Type: STRING .

    $default  reduce using rule 98 (Type)


State 23

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType . FuncBlock

    '{'  shift, and go to state 28

    FuncBlock        go to state 29
    FunctionUpBlock  go to state 30


State 24

   95 ReturnType: Type .

    $default  reduce using rule 95 (ReturnType)


State 25

  101 ParameterList: IDENT Type .

    $default  reduce using rule 101 (ParameterList)


State 26

    9 FuncParameter: '(' ParameterList ')' .

    $default  reduce using rule 9 (FuncParameter)


State 27

  102 ParameterList: ParameterList ',' . IDENT Type

    IDENT  shift, and go to state 31


State 28

   12 FunctionUpBlock: '{' .

    $default  reduce using rule 12 (FunctionUpBlock)


State 29

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType FuncBlock .

    $default  reduce using rule 8 (FunctionDeclStmt)


State 30

   11 FuncBlock: FunctionUpBlock . StatementList '}'

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 61
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Statement                  go to state 67
    SimpleStmt                 go to state 68
    DeclarationStmt            go to state 69
    ExpressionStmt             go to state 70
    Block                      go to state 71
    BlockUp                    go to state 72
    StatementList              go to state 73
    IfStmt                     go to state 74
    ForStmt                    go to state 75
    SwitchStmt                 go to state 76
    CaseStmt                   go to state 77
    Type                       go to state 78
    ReturnStmt                 go to state 79
    PrintStmt                  go to state 80


State 31

  102 ParameterList: ParameterList ',' IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 81


State 32

   69 DeclarationStmt: VAR . IDENT Type
   70                | VAR . IDENT Type '=' Expression

    IDENT  shift, and go to state 82


State 33

   67 Statement: NEWLINE .

    $default  reduce using rule 67 (Statement)


State 34

   82 IfStmt: IF . Condition Block
   83       | IF . Condition Block ELSE IfStmt
   84       | IF . Condition Block ELSE Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 83
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Condition                  go to state 84
    Type                       go to state 78


State 35

   86 ForStmt: FOR . ForClause Block
   87        | FOR . Condition Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 85
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    SimpleStmt                 go to state 86
    ExpressionStmt             go to state 70
    Condition                  go to state 87
    ForClause                  go to state 88
    InitStmt                   go to state 89
    Type                       go to state 78


State 36

   91 SwitchStmt: SWITCH . Expression Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 90
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 37

   92 CaseStmt: CASE . INT_LIT ':' Block

    INT_LIT  shift, and go to state 91


State 38

  105 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 92


State 39

  103 ReturnStmt: RETURN . Expression
  104           | RETURN .

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 104 (ReturnStmt)

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 93
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 40

  106 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 94


State 41

   93 CaseStmt: DEFAULT . ':' Block

    ':'  shift, and go to state 95


State 42

   53 Literal: INT_LIT .

    $default  reduce using rule 53 (Literal)


State 43

   55 Literal: BOOL_LIT .

    $default  reduce using rule 55 (Literal)


State 44

   54 Literal: FLOAT_LIT .

    $default  reduce using rule 54 (Literal)


State 45

   51 Operand: IDENT .

    $default  reduce using rule 51 (Operand)


State 46

   18 cast_expression: '(' . Type ')' cast_expression
   52 Operand: '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 96
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 97


State 47

   79 BlockUp: '{' .

    $default  reduce using rule 79 (BlockUp)


State 48

   45 unary_op: '+' .

    $default  reduce using rule 45 (unary_op)


State 49

   46 unary_op: '-' .

    $default  reduce using rule 46 (unary_op)


State 50

   47 unary_op: '!' .

    $default  reduce using rule 47 (unary_op)


State 51

   56 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 98


State 52

   14 UnaryExpr: UnaryExpr . INC
   15          | UnaryExpr . DEC
   17 cast_expression: UnaryExpr .
   32 assignment_expression: UnaryExpr . assign_op assignment_expression

    INC         shift, and go to state 99
    DEC         shift, and go to state 100
    ADD_ASSIGN  shift, and go to state 101
    SUB_ASSIGN  shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    DIV_ASSIGN  shift, and go to state 104
    MOD_ASSIGN  shift, and go to state 105
    '='         shift, and go to state 106

    $default  reduce using rule 17 (cast_expression)

    assign_op  go to state 107


State 53

   19 multiplicative_expression: cast_expression .

    $default  reduce using rule 19 (multiplicative_expression)


State 54

   20 multiplicative_expression: multiplicative_expression . mul_op cast_expression
   21 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 21 (additive_expression)

    mul_op  go to state 111


State 55

   22 additive_expression: additive_expression . add_op multiplicative_expression
   23 relational_expression: additive_expression .

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113

    $default  reduce using rule 23 (relational_expression)

    add_op  go to state 114


State 56

   24 relational_expression: relational_expression . rel_op additive_expression
   25 equality_expression: relational_expression .

    GEQ  shift, and go to state 115
    LEQ  shift, and go to state 116
    '<'  shift, and go to state 117
    '>'  shift, and go to state 118

    $default  reduce using rule 25 (equality_expression)

    rel_op  go to state 119


State 57

   26 equality_expression: equality_expression . equ_op relational_expression
   27 logical_and_expression: equality_expression .

    EQ   shift, and go to state 120
    NEQ  shift, and go to state 121

    $default  reduce using rule 27 (logical_and_expression)

    equ_op  go to state 122


State 58

   28 logical_and_expression: logical_and_expression . LAND equality_expression
   29 logical_or_expression: logical_and_expression .

    LAND  shift, and go to state 123

    $default  reduce using rule 29 (logical_or_expression)


State 59

   30 logical_or_expression: logical_or_expression . LOR logical_and_expression
   31 assignment_expression: logical_or_expression .

    LOR  shift, and go to state 124

    $default  reduce using rule 31 (assignment_expression)


State 60

   33 Expression: assignment_expression .

    $default  reduce using rule 33 (Expression)


State 61

   77 ExpressionStmt: Expression .

    $default  reduce using rule 77 (ExpressionStmt)


State 62

   16 UnaryExpr: unary_op . cast_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr        go to state 125
    cast_expression  go to state 126
    unary_op         go to state 62
    PrimaryExpr      go to state 63
    Operand          go to state 64
    Literal          go to state 65
    ConversionExpr   go to state 66
    Type             go to state 78


State 63

   13 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 13 (UnaryExpr)


State 64

   48 PrimaryExpr: Operand .

    $default  reduce using rule 48 (PrimaryExpr)


State 65

   50 Operand: Literal .

    $default  reduce using rule 50 (Operand)


State 66

   49 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 49 (PrimaryExpr)


State 67

   80 StatementList: Statement . StatementList
   81              | Statement .

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 81 (StatementList)

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 61
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Statement                  go to state 67
    SimpleStmt                 go to state 68
    DeclarationStmt            go to state 69
    ExpressionStmt             go to state 70
    Block                      go to state 71
    BlockUp                    go to state 72
    StatementList              go to state 127
    IfStmt                     go to state 74
    ForStmt                    go to state 75
    SwitchStmt                 go to state 76
    CaseStmt                   go to state 77
    Type                       go to state 78
    ReturnStmt                 go to state 79
    PrintStmt                  go to state 80


State 68

   59 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 128


State 69

   58 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 129


State 70

   68 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 68 (SimpleStmt)


State 71

   60 Statement: Block .

    $default  reduce using rule 60 (Statement)


State 72

   78 Block: BlockUp . StatementList '}'

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 61
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Statement                  go to state 67
    SimpleStmt                 go to state 68
    DeclarationStmt            go to state 69
    ExpressionStmt             go to state 70
    Block                      go to state 71
    BlockUp                    go to state 72
    StatementList              go to state 130
    IfStmt                     go to state 74
    ForStmt                    go to state 75
    SwitchStmt                 go to state 76
    CaseStmt                   go to state 77
    Type                       go to state 78
    ReturnStmt                 go to state 79
    PrintStmt                  go to state 80


State 73

   11 FuncBlock: FunctionUpBlock StatementList . '}'

    '}'  shift, and go to state 131


State 74

   61 Statement: IfStmt .

    $default  reduce using rule 61 (Statement)


State 75

   62 Statement: ForStmt .

    $default  reduce using rule 62 (Statement)


State 76

   63 Statement: SwitchStmt .

    $default  reduce using rule 63 (Statement)


State 77

   64 Statement: CaseStmt .

    $default  reduce using rule 64 (Statement)


State 78

   57 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 132


State 79

   66 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 133


State 80

   65 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 134


State 81

  102 ParameterList: ParameterList ',' IDENT Type .

    $default  reduce using rule 102 (ParameterList)


State 82

   69 DeclarationStmt: VAR IDENT . Type
   70                | VAR IDENT . Type '=' Expression

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 135


State 83

   85 Condition: Expression .

    $default  reduce using rule 85 (Condition)


State 84

   82 IfStmt: IF Condition . Block
   83       | IF Condition . Block ELSE IfStmt
   84       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 47

    Block    go to state 136
    BlockUp  go to state 72


State 85

   77 ExpressionStmt: Expression .
   85 Condition: Expression .

    '{'       reduce using rule 85 (Condition)
    $default  reduce using rule 77 (ExpressionStmt)


State 86

   89 InitStmt: SimpleStmt .

    $default  reduce using rule 89 (InitStmt)


State 87

   87 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 47

    Block    go to state 137
    BlockUp  go to state 72


State 88

   86 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 47

    Block    go to state 138
    BlockUp  go to state 72


State 89

   88 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 139


State 90

   91 SwitchStmt: SWITCH Expression . Block

    '{'  shift, and go to state 47

    Block    go to state 140
    BlockUp  go to state 72


State 91

   92 CaseStmt: CASE INT_LIT . ':' Block

    ':'  shift, and go to state 141


State 92

  105 PrintStmt: PRINT '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 142
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 93

  103 ReturnStmt: RETURN Expression .

    $default  reduce using rule 103 (ReturnStmt)


State 94

  106 PrintStmt: PRINTLN '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 143
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 95

   93 CaseStmt: DEFAULT ':' . Block

    '{'  shift, and go to state 47

    Block    go to state 144
    BlockUp  go to state 72


State 96

   52 Operand: '(' Expression . ')'

    ')'  shift, and go to state 145


State 97

   18 cast_expression: '(' Type . ')' cast_expression
   57 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 132
    ')'  shift, and go to state 146


State 98

   56 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 147


State 99

   14 UnaryExpr: UnaryExpr INC .

    $default  reduce using rule 14 (UnaryExpr)


State 100

   15 UnaryExpr: UnaryExpr DEC .

    $default  reduce using rule 15 (UnaryExpr)


State 101

   72 assign_op: ADD_ASSIGN .

    $default  reduce using rule 72 (assign_op)


State 102

   73 assign_op: SUB_ASSIGN .

    $default  reduce using rule 73 (assign_op)


State 103

   74 assign_op: MUL_ASSIGN .

    $default  reduce using rule 74 (assign_op)


State 104

   75 assign_op: DIV_ASSIGN .

    $default  reduce using rule 75 (assign_op)


State 105

   76 assign_op: MOD_ASSIGN .

    $default  reduce using rule 76 (assign_op)


State 106

   71 assign_op: '=' .

    $default  reduce using rule 71 (assign_op)


State 107

   32 assignment_expression: UnaryExpr assign_op . assignment_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 148
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 108

   42 mul_op: '*' .

    $default  reduce using rule 42 (mul_op)


State 109

   43 mul_op: '/' .

    $default  reduce using rule 43 (mul_op)


State 110

   44 mul_op: '%' .

    $default  reduce using rule 44 (mul_op)


State 111

   20 multiplicative_expression: multiplicative_expression mul_op . cast_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr        go to state 125
    cast_expression  go to state 149
    unary_op         go to state 62
    PrimaryExpr      go to state 63
    Operand          go to state 64
    Literal          go to state 65
    ConversionExpr   go to state 66
    Type             go to state 78


State 112

   40 add_op: '+' .

    $default  reduce using rule 40 (add_op)


State 113

   41 add_op: '-' .

    $default  reduce using rule 41 (add_op)


State 114

   22 additive_expression: additive_expression add_op . multiplicative_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 125
    cast_expression            go to state 53
    multiplicative_expression  go to state 150
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 115

   37 rel_op: GEQ .

    $default  reduce using rule 37 (rel_op)


State 116

   35 rel_op: LEQ .

    $default  reduce using rule 35 (rel_op)


State 117

   34 rel_op: '<' .

    $default  reduce using rule 34 (rel_op)


State 118

   36 rel_op: '>' .

    $default  reduce using rule 36 (rel_op)


State 119

   24 relational_expression: relational_expression rel_op . additive_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 125
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 151
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 120

   38 equ_op: EQ .

    $default  reduce using rule 38 (equ_op)


State 121

   39 equ_op: NEQ .

    $default  reduce using rule 39 (equ_op)


State 122

   26 equality_expression: equality_expression equ_op . relational_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 125
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 152
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 123

   28 logical_and_expression: logical_and_expression LAND . equality_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 125
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 153
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 124

   30 logical_or_expression: logical_or_expression LOR . logical_and_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 125
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 154
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 125

   14 UnaryExpr: UnaryExpr . INC
   15          | UnaryExpr . DEC
   17 cast_expression: UnaryExpr .

    INC  shift, and go to state 99
    DEC  shift, and go to state 100

    INC       [reduce using rule 17 (cast_expression)]
    DEC       [reduce using rule 17 (cast_expression)]
    $default  reduce using rule 17 (cast_expression)


State 126

   16 UnaryExpr: unary_op cast_expression .

    $default  reduce using rule 16 (UnaryExpr)


State 127

   80 StatementList: Statement StatementList .

    $default  reduce using rule 80 (StatementList)


State 128

   59 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 59 (Statement)


State 129

   58 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 58 (Statement)


State 130

   78 Block: BlockUp StatementList . '}'

    '}'  shift, and go to state 155


State 131

   11 FuncBlock: FunctionUpBlock StatementList '}' .

    $default  reduce using rule 11 (FuncBlock)


State 132

   57 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 156
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 133

   66 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 66 (Statement)


State 134

   65 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 65 (Statement)


State 135

   69 DeclarationStmt: VAR IDENT Type .
   70                | VAR IDENT Type . '=' Expression

    '='  shift, and go to state 157

    $default  reduce using rule 69 (DeclarationStmt)


State 136

   82 IfStmt: IF Condition Block .
   83       | IF Condition Block . ELSE IfStmt
   84       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 158

    $default  reduce using rule 82 (IfStmt)


State 137

   87 ForStmt: FOR Condition Block .

    $default  reduce using rule 87 (ForStmt)


State 138

   86 ForStmt: FOR ForClause Block .

    $default  reduce using rule 86 (ForStmt)


State 139

   88 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 83
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Condition                  go to state 159
    Type                       go to state 78


State 140

   91 SwitchStmt: SWITCH Expression Block .

    $default  reduce using rule 91 (SwitchStmt)


State 141

   92 CaseStmt: CASE INT_LIT ':' . Block

    '{'  shift, and go to state 47

    Block    go to state 160
    BlockUp  go to state 72


State 142

  105 PrintStmt: PRINT '(' Expression . ')'

    ')'  shift, and go to state 161


State 143

  106 PrintStmt: PRINTLN '(' Expression . ')'

    ')'  shift, and go to state 162


State 144

   93 CaseStmt: DEFAULT ':' Block .

    $default  reduce using rule 93 (CaseStmt)


State 145

   52 Operand: '(' Expression ')' .

    $default  reduce using rule 52 (Operand)


State 146

   18 cast_expression: '(' Type ')' . cast_expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr        go to state 125
    cast_expression  go to state 163
    unary_op         go to state 62
    PrimaryExpr      go to state 63
    Operand          go to state 64
    Literal          go to state 65
    ConversionExpr   go to state 66
    Type             go to state 78


State 147

   56 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 56 (Literal)


State 148

   32 assignment_expression: UnaryExpr assign_op assignment_expression .

    $default  reduce using rule 32 (assignment_expression)


State 149

   20 multiplicative_expression: multiplicative_expression mul_op cast_expression .

    $default  reduce using rule 20 (multiplicative_expression)


State 150

   20 multiplicative_expression: multiplicative_expression . mul_op cast_expression
   22 additive_expression: additive_expression add_op multiplicative_expression .

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110

    $default  reduce using rule 22 (additive_expression)

    mul_op  go to state 111


State 151

   22 additive_expression: additive_expression . add_op multiplicative_expression
   24 relational_expression: relational_expression rel_op additive_expression .

    '+'  shift, and go to state 112
    '-'  shift, and go to state 113

    $default  reduce using rule 24 (relational_expression)

    add_op  go to state 114


State 152

   24 relational_expression: relational_expression . rel_op additive_expression
   26 equality_expression: equality_expression equ_op relational_expression .

    GEQ  shift, and go to state 115
    LEQ  shift, and go to state 116
    '<'  shift, and go to state 117
    '>'  shift, and go to state 118

    $default  reduce using rule 26 (equality_expression)

    rel_op  go to state 119


State 153

   26 equality_expression: equality_expression . equ_op relational_expression
   28 logical_and_expression: logical_and_expression LAND equality_expression .

    EQ   shift, and go to state 120
    NEQ  shift, and go to state 121

    $default  reduce using rule 28 (logical_and_expression)

    equ_op  go to state 122


State 154

   28 logical_and_expression: logical_and_expression . LAND equality_expression
   30 logical_or_expression: logical_or_expression LOR logical_and_expression .

    LAND  shift, and go to state 123

    $default  reduce using rule 30 (logical_or_expression)


State 155

   78 Block: BlockUp StatementList '}' .

    $default  reduce using rule 78 (Block)


State 156

   57 ConversionExpr: Type '(' Expression . ')'

    ')'  shift, and go to state 164


State 157

   70 DeclarationStmt: VAR IDENT Type '=' . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 165
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    Type                       go to state 78


State 158

   83 IfStmt: IF Condition Block ELSE . IfStmt
   84       | IF Condition Block ELSE . Block

    IF   shift, and go to state 34
    '{'  shift, and go to state 47

    Block    go to state 166
    BlockUp  go to state 72
    IfStmt   go to state 167


State 159

   88 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 168


State 160

   92 CaseStmt: CASE INT_LIT ':' Block .

    $default  reduce using rule 92 (CaseStmt)


State 161

  105 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 105 (PrintStmt)


State 162

  106 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 106 (PrintStmt)


State 163

   18 cast_expression: '(' Type ')' cast_expression .

    $default  reduce using rule 18 (cast_expression)


State 164

   57 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 57 (ConversionExpr)


State 165

   70 DeclarationStmt: VAR IDENT Type '=' Expression .

    $default  reduce using rule 70 (DeclarationStmt)


State 166

   84 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 84 (IfStmt)


State 167

   83 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 83 (IfStmt)


State 168

   88 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr                  go to state 52
    cast_expression            go to state 53
    multiplicative_expression  go to state 54
    additive_expression        go to state 55
    relational_expression      go to state 56
    equality_expression        go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    Expression                 go to state 61
    unary_op                   go to state 62
    PrimaryExpr                go to state 63
    Operand                    go to state 64
    Literal                    go to state 65
    ConversionExpr             go to state 66
    SimpleStmt                 go to state 169
    ExpressionStmt             go to state 70
    PostStmt                   go to state 170
    Type                       go to state 78


State 169

   90 PostStmt: SimpleStmt .

    $default  reduce using rule 90 (PostStmt)


State 170

   88 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 88 (ForClause)
