State 139 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 PackageStmt: PACKAGE IDENT

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType FuncBlock

    9 FuncParameter: '(' ParameterList ')'

   10 FuncOpen: FUNC IDENT

   11 FuncBlock: FunctionUpBlock StatementList '}'

   12 FunctionUpBlock: '{'

   13 Expression: UnaryExpr
   14           | Expression binary_op Expression

   15 UnaryExpr: PrimaryExpr
   16          | unary_op UnaryExpr

   17 binary_op: LOR
   18          | LAND
   19          | cmp_op
   20          | add_op
   21          | mul_op

   22 cmp_op: EQ
   23       | NEQ
   24       | '<'
   25       | LEQ
   26       | '>'
   27       | GEQ

   28 add_op: '+'
   29       | '-'

   30 mul_op: '*'
   31       | '/'
   32       | '%'

   33 unary_op: '+'
   34         | '-'
   35         | '!'

   36 PrimaryExpr: Operand
   37            | ConversionExpr

   38 Operand: Literal
   39        | IDENT
   40        | '(' Expression ')'

   41 Literal: INT_LIT
   42        | FLOAT_LIT
   43        | BOOL_LIT
   44        | '"' STRING_LIT '"'

   45 ConversionExpr: Type '(' Expression ')'

   46 Statement: DeclarationStmt NEWLINE
   47          | SimpleStmt NEWLINE
   48          | Block
   49          | IfStmt
   50          | ForStmt
   51          | SwitchStmt
   52          | CaseStmt
   53          | PrintStmt NEWLINE
   54          | ReturnStmt NEWLINE
   55          | NEWLINE

   56 SimpleStmt: AssignmentStmt
   57           | ExpressionStmt
   58           | IncDecStmt

   59 DeclarationStmt: VAR IDENT Type
   60                | VAR IDENT Type '=' Expression

   61 AssignmentStmt: Expression assign_op Expression

   62 assign_op: '='
   63          | ADD_ASSIGN
   64          | SUB_ASSIGN
   65          | MUL_ASSIGN
   66          | DIV_ASSIGN
   67          | MOD_ASSIGN

   68 ExpressionStmt: Expression

   69 IncDecStmt: Expression INC
   70           | Expression DEC

   71 Block: '{' StatementList '}'

   72 StatementList: Statement StatementList
   73              | Statement

   74 IfStmt: IF Condition Block
   75       | IF Condition Block ELSE IfStmt
   76       | IF Condition Block ELSE Block

   77 Condition: Expression

   78 ForStmt: FOR ForClause Block
   79        | FOR Condition Block

   80 ForClause: InitStmt ';' Condition ';' PostStmt

   81 InitStmt: SimpleStmt

   82 PostStmt: SimpleStmt

   83 SwitchStmt: SWITCH Expression Block

   84 CaseStmt: CASE INT_LIT ':' Block
   85         | DEFAULT ':' Block

   86 ReturnType: %empty
   87           | Type

   88 Type: INT
   89     | FLOAT
   90     | STRING
   91     | BOOL

   92 ParameterList: %empty
   93              | IDENT Type
   94              | ParameterList ',' IDENT Type

   95 ReturnStmt: RETURN Expression
   96           | RETURN

   97 PrintStmt: PRINT '(' Expression ')'
   98          | PRINTLN '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 35
'"' (34) 44
'%' (37) 32
'(' (40) 9 40 45 97 98
')' (41) 9 40 45 97 98
'*' (42) 30
'+' (43) 28 33
',' (44) 94
'-' (45) 29 34
'/' (47) 31
':' (58) 84 85
';' (59) 80
'<' (60) 24
'=' (61) 60 62
'>' (62) 26
'{' (123) 12 71
'}' (125) 11 71
error (256)
VAR (258) 59 60
NEWLINE (259) 4 6 46 47 53 54 55
INT (260) 88
FLOAT (261) 89
BOOL (262) 91
STRING (263) 90
INC (264) 69
DEC (265) 70
GEQ (266) 27
LOR (267) 17
LAND (268) 18
EQ (269) 22
LEQ (270) 25
NEQ (271) 23
ADD_ASSIGN (272) 63
SUB_ASSIGN (273) 64
MUL_ASSIGN (274) 65
DIV_ASSIGN (275) 66
MOD_ASSIGN (276) 67
IF (277) 74 75 76
ELSE (278) 75 76
FOR (279) 78 79
SWITCH (280) 83
CASE (281) 84
FUNC (282) 10
PRINT (283) 97
PACKAGE (284) 7
RETURN (285) 95 96
PRINTLN (286) 98
DEFAULT (287) 85
INT_LIT (288) 41 84
STRING_LIT (289) 44
BOOL_LIT (290) 43
FLOAT_LIT (291) 42
IDENT (292) 7 10 39 59 60 93 94


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
Program (56)
    on left: 1, on right: 0
GlobalStatementList (57)
    on left: 2 3, on right: 1 2
GlobalStatement (58)
    on left: 4 5 6, on right: 2 3
PackageStmt (59)
    on left: 7, on right: 4
FunctionDeclStmt (60)
    on left: 8, on right: 5
FuncParameter (61)
    on left: 9, on right: 8
FuncOpen (62)
    on left: 10, on right: 8
FuncBlock (63)
    on left: 11, on right: 8
FunctionUpBlock (64)
    on left: 12, on right: 11
Expression (65)
    on left: 13 14, on right: 14 40 45 60 61 68 69 70 77 83 95 97 98
UnaryExpr (66)
    on left: 15 16, on right: 13 16
binary_op (67)
    on left: 17 18 19 20 21, on right: 14
cmp_op (68)
    on left: 22 23 24 25 26 27, on right: 19
add_op (69)
    on left: 28 29, on right: 20
mul_op (70)
    on left: 30 31 32, on right: 21
unary_op (71)
    on left: 33 34 35, on right: 16
PrimaryExpr (72)
    on left: 36 37, on right: 15
Operand (73)
    on left: 38 39 40, on right: 36
Literal (74)
    on left: 41 42 43 44, on right: 38
ConversionExpr (75)
    on left: 45, on right: 37
Statement (76)
    on left: 46 47 48 49 50 51 52 53 54 55, on right: 72 73
SimpleStmt (77)
    on left: 56 57 58, on right: 47 81 82
DeclarationStmt (78)
    on left: 59 60, on right: 46
AssignmentStmt (79)
    on left: 61, on right: 56
assign_op (80)
    on left: 62 63 64 65 66 67, on right: 61
ExpressionStmt (81)
    on left: 68, on right: 57
IncDecStmt (82)
    on left: 69 70, on right: 58
Block (83)
    on left: 71, on right: 48 74 75 76 78 79 83 84 85
StatementList (84)
    on left: 72 73, on right: 11 71 72
IfStmt (85)
    on left: 74 75 76, on right: 49 75
Condition (86)
    on left: 77, on right: 74 75 76 79 80
ForStmt (87)
    on left: 78 79, on right: 50
ForClause (88)
    on left: 80, on right: 78
InitStmt (89)
    on left: 81, on right: 80
PostStmt (90)
    on left: 82, on right: 80
SwitchStmt (91)
    on left: 83, on right: 51
CaseStmt (92)
    on left: 84 85, on right: 52
ReturnType (93)
    on left: 86 87, on right: 8
Type (94)
    on left: 88 89 90 91, on right: 45 59 60 87 93 94
ParameterList (95)
    on left: 92 93 94, on right: 9 94
ReturnStmt (96)
    on left: 95 96, on right: 54
PrintStmt (97)
    on left: 97 98, on right: 53


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

   10 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 10


State 3

    7 PackageStmt: PACKAGE . IDENT

    IDENT  shift, and go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FuncOpen . FuncParameter ReturnType FuncBlock

    '('  shift, and go to state 15

    FuncParameter  go to state 16


State 10

   10 FuncOpen: FUNC IDENT .

    $default  reduce using rule 10 (FuncOpen)


State 11

    7 PackageStmt: PACKAGE IDENT .

    $default  reduce using rule 7 (PackageStmt)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 15

    9 FuncParameter: '(' . ParameterList ')'

    IDENT  shift, and go to state 17

    $default  reduce using rule 92 (ParameterList)

    ParameterList  go to state 18


State 16

    8 FunctionDeclStmt: FuncOpen FuncParameter . ReturnType FuncBlock

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    $default  reduce using rule 86 (ReturnType)

    ReturnType  go to state 23
    Type        go to state 24


State 17

   93 ParameterList: IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 25


State 18

    9 FuncParameter: '(' ParameterList . ')'
   94 ParameterList: ParameterList . ',' IDENT Type

    ')'  shift, and go to state 26
    ','  shift, and go to state 27


State 19

   88 Type: INT .

    $default  reduce using rule 88 (Type)


State 20

   89 Type: FLOAT .

    $default  reduce using rule 89 (Type)


State 21

   91 Type: BOOL .

    $default  reduce using rule 91 (Type)


State 22

   90 Type: STRING .

    $default  reduce using rule 90 (Type)


State 23

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType . FuncBlock

    '{'  shift, and go to state 28

    FuncBlock        go to state 29
    FunctionUpBlock  go to state 30


State 24

   87 ReturnType: Type .

    $default  reduce using rule 87 (ReturnType)


State 25

   93 ParameterList: IDENT Type .

    $default  reduce using rule 93 (ParameterList)


State 26

    9 FuncParameter: '(' ParameterList ')' .

    $default  reduce using rule 9 (FuncParameter)


State 27

   94 ParameterList: ParameterList ',' . IDENT Type

    IDENT  shift, and go to state 31


State 28

   12 FunctionUpBlock: '{' .

    $default  reduce using rule 12 (FunctionUpBlock)


State 29

    8 FunctionDeclStmt: FuncOpen FuncParameter ReturnType FuncBlock .

    $default  reduce using rule 8 (FunctionDeclStmt)


State 30

   11 FuncBlock: FunctionUpBlock . StatementList '}'

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression       go to state 52
    UnaryExpr        go to state 53
    unary_op         go to state 54
    PrimaryExpr      go to state 55
    Operand          go to state 56
    Literal          go to state 57
    ConversionExpr   go to state 58
    Statement        go to state 59
    SimpleStmt       go to state 60
    DeclarationStmt  go to state 61
    AssignmentStmt   go to state 62
    ExpressionStmt   go to state 63
    IncDecStmt       go to state 64
    Block            go to state 65
    StatementList    go to state 66
    IfStmt           go to state 67
    ForStmt          go to state 68
    SwitchStmt       go to state 69
    CaseStmt         go to state 70
    Type             go to state 71
    ReturnStmt       go to state 72
    PrintStmt        go to state 73


State 31

   94 ParameterList: ParameterList ',' IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 74


State 32

   59 DeclarationStmt: VAR . IDENT Type
   60                | VAR . IDENT Type '=' Expression

    IDENT  shift, and go to state 75


State 33

   55 Statement: NEWLINE .

    $default  reduce using rule 55 (Statement)


State 34

   74 IfStmt: IF . Condition Block
   75       | IF . Condition Block ELSE IfStmt
   76       | IF . Condition Block ELSE Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 76
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Condition       go to state 77
    Type            go to state 71


State 35

   78 ForStmt: FOR . ForClause Block
   79        | FOR . Condition Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 78
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    SimpleStmt      go to state 79
    AssignmentStmt  go to state 62
    ExpressionStmt  go to state 63
    IncDecStmt      go to state 64
    Condition       go to state 80
    ForClause       go to state 81
    InitStmt        go to state 82
    Type            go to state 71


State 36

   83 SwitchStmt: SWITCH . Expression Block

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 83
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 37

   84 CaseStmt: CASE . INT_LIT ':' Block

    INT_LIT  shift, and go to state 84


State 38

   97 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 85


State 39

   95 ReturnStmt: RETURN . Expression
   96           | RETURN .

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 96 (ReturnStmt)

    Expression      go to state 86
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 40

   98 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 87


State 41

   85 CaseStmt: DEFAULT . ':' Block

    ':'  shift, and go to state 88


State 42

   41 Literal: INT_LIT .

    $default  reduce using rule 41 (Literal)


State 43

   43 Literal: BOOL_LIT .

    $default  reduce using rule 43 (Literal)


State 44

   42 Literal: FLOAT_LIT .

    $default  reduce using rule 42 (Literal)


State 45

   39 Operand: IDENT .

    $default  reduce using rule 39 (Operand)


State 46

   40 Operand: '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 89
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 47

   71 Block: '{' . StatementList '}'

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression       go to state 52
    UnaryExpr        go to state 53
    unary_op         go to state 54
    PrimaryExpr      go to state 55
    Operand          go to state 56
    Literal          go to state 57
    ConversionExpr   go to state 58
    Statement        go to state 59
    SimpleStmt       go to state 60
    DeclarationStmt  go to state 61
    AssignmentStmt   go to state 62
    ExpressionStmt   go to state 63
    IncDecStmt       go to state 64
    Block            go to state 65
    StatementList    go to state 90
    IfStmt           go to state 67
    ForStmt          go to state 68
    SwitchStmt       go to state 69
    CaseStmt         go to state 70
    Type             go to state 71
    ReturnStmt       go to state 72
    PrintStmt        go to state 73


State 48

   33 unary_op: '+' .

    $default  reduce using rule 33 (unary_op)


State 49

   34 unary_op: '-' .

    $default  reduce using rule 34 (unary_op)


State 50

   35 unary_op: '!' .

    $default  reduce using rule 35 (unary_op)


State 51

   44 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 91


State 52

   14 Expression: Expression . binary_op Expression
   61 AssignmentStmt: Expression . assign_op Expression
   68 ExpressionStmt: Expression .
   69 IncDecStmt: Expression . INC
   70           | Expression . DEC

    INC         shift, and go to state 92
    DEC         shift, and go to state 93
    GEQ         shift, and go to state 94
    LOR         shift, and go to state 95
    LAND        shift, and go to state 96
    EQ          shift, and go to state 97
    LEQ         shift, and go to state 98
    NEQ         shift, and go to state 99
    ADD_ASSIGN  shift, and go to state 100
    SUB_ASSIGN  shift, and go to state 101
    MUL_ASSIGN  shift, and go to state 102
    DIV_ASSIGN  shift, and go to state 103
    MOD_ASSIGN  shift, and go to state 104
    '<'         shift, and go to state 105
    '>'         shift, and go to state 106
    '+'         shift, and go to state 107
    '-'         shift, and go to state 108
    '*'         shift, and go to state 109
    '/'         shift, and go to state 110
    '%'         shift, and go to state 111
    '='         shift, and go to state 112

    $default  reduce using rule 68 (ExpressionStmt)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116
    assign_op  go to state 117


State 53

   13 Expression: UnaryExpr .

    $default  reduce using rule 13 (Expression)


State 54

   16 UnaryExpr: unary_op . UnaryExpr

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    UnaryExpr       go to state 118
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 55

   15 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 15 (UnaryExpr)


State 56

   36 PrimaryExpr: Operand .

    $default  reduce using rule 36 (PrimaryExpr)


State 57

   38 Operand: Literal .

    $default  reduce using rule 38 (Operand)


State 58

   37 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 37 (PrimaryExpr)


State 59

   72 StatementList: Statement . StatementList
   73              | Statement .

    VAR        shift, and go to state 32
    NEWLINE    shift, and go to state 33
    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    SWITCH     shift, and go to state 36
    CASE       shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PRINTLN    shift, and go to state 40
    DEFAULT    shift, and go to state 41
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '{'        shift, and go to state 47
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    $default  reduce using rule 73 (StatementList)

    Expression       go to state 52
    UnaryExpr        go to state 53
    unary_op         go to state 54
    PrimaryExpr      go to state 55
    Operand          go to state 56
    Literal          go to state 57
    ConversionExpr   go to state 58
    Statement        go to state 59
    SimpleStmt       go to state 60
    DeclarationStmt  go to state 61
    AssignmentStmt   go to state 62
    ExpressionStmt   go to state 63
    IncDecStmt       go to state 64
    Block            go to state 65
    StatementList    go to state 119
    IfStmt           go to state 67
    ForStmt          go to state 68
    SwitchStmt       go to state 69
    CaseStmt         go to state 70
    Type             go to state 71
    ReturnStmt       go to state 72
    PrintStmt        go to state 73


State 60

   47 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 120


State 61

   46 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 121


State 62

   56 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 56 (SimpleStmt)


State 63

   57 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 57 (SimpleStmt)


State 64

   58 SimpleStmt: IncDecStmt .

    $default  reduce using rule 58 (SimpleStmt)


State 65

   48 Statement: Block .

    $default  reduce using rule 48 (Statement)


State 66

   11 FuncBlock: FunctionUpBlock StatementList . '}'

    '}'  shift, and go to state 122


State 67

   49 Statement: IfStmt .

    $default  reduce using rule 49 (Statement)


State 68

   50 Statement: ForStmt .

    $default  reduce using rule 50 (Statement)


State 69

   51 Statement: SwitchStmt .

    $default  reduce using rule 51 (Statement)


State 70

   52 Statement: CaseStmt .

    $default  reduce using rule 52 (Statement)


State 71

   45 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 123


State 72

   54 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 124


State 73

   53 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 125


State 74

   94 ParameterList: ParameterList ',' IDENT Type .

    $default  reduce using rule 94 (ParameterList)


State 75

   59 DeclarationStmt: VAR IDENT . Type
   60                | VAR IDENT . Type '=' Expression

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 126


State 76

   14 Expression: Expression . binary_op Expression
   77 Condition: Expression .

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 77 (Condition)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 77

   74 IfStmt: IF Condition . Block
   75       | IF Condition . Block ELSE IfStmt
   76       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 47

    Block  go to state 127


State 78

   14 Expression: Expression . binary_op Expression
   61 AssignmentStmt: Expression . assign_op Expression
   68 ExpressionStmt: Expression .
   69 IncDecStmt: Expression . INC
   70           | Expression . DEC
   77 Condition: Expression .

    INC         shift, and go to state 92
    DEC         shift, and go to state 93
    GEQ         shift, and go to state 94
    LOR         shift, and go to state 95
    LAND        shift, and go to state 96
    EQ          shift, and go to state 97
    LEQ         shift, and go to state 98
    NEQ         shift, and go to state 99
    ADD_ASSIGN  shift, and go to state 100
    SUB_ASSIGN  shift, and go to state 101
    MUL_ASSIGN  shift, and go to state 102
    DIV_ASSIGN  shift, and go to state 103
    MOD_ASSIGN  shift, and go to state 104
    '<'         shift, and go to state 105
    '>'         shift, and go to state 106
    '+'         shift, and go to state 107
    '-'         shift, and go to state 108
    '*'         shift, and go to state 109
    '/'         shift, and go to state 110
    '%'         shift, and go to state 111
    '='         shift, and go to state 112

    '{'       reduce using rule 77 (Condition)
    $default  reduce using rule 68 (ExpressionStmt)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116
    assign_op  go to state 117


State 79

   81 InitStmt: SimpleStmt .

    $default  reduce using rule 81 (InitStmt)


State 80

   79 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 47

    Block  go to state 128


State 81

   78 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 47

    Block  go to state 129


State 82

   80 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 130


State 83

   14 Expression: Expression . binary_op Expression
   83 SwitchStmt: SWITCH Expression . Block

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    '{'   shift, and go to state 47
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116
    Block      go to state 131


State 84

   84 CaseStmt: CASE INT_LIT . ':' Block

    ':'  shift, and go to state 132


State 85

   97 PrintStmt: PRINT '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 133
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 86

   14 Expression: Expression . binary_op Expression
   95 ReturnStmt: RETURN Expression .

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 95 (ReturnStmt)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 87

   98 PrintStmt: PRINTLN '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 134
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 88

   85 CaseStmt: DEFAULT ':' . Block

    '{'  shift, and go to state 47

    Block  go to state 135


State 89

   14 Expression: Expression . binary_op Expression
   40 Operand: '(' Expression . ')'

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    ')'   shift, and go to state 136
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 90

   71 Block: '{' StatementList . '}'

    '}'  shift, and go to state 137


State 91

   44 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 138


State 92

   69 IncDecStmt: Expression INC .

    $default  reduce using rule 69 (IncDecStmt)


State 93

   70 IncDecStmt: Expression DEC .

    $default  reduce using rule 70 (IncDecStmt)


State 94

   27 cmp_op: GEQ .

    $default  reduce using rule 27 (cmp_op)


State 95

   17 binary_op: LOR .

    $default  reduce using rule 17 (binary_op)


State 96

   18 binary_op: LAND .

    $default  reduce using rule 18 (binary_op)


State 97

   22 cmp_op: EQ .

    $default  reduce using rule 22 (cmp_op)


State 98

   25 cmp_op: LEQ .

    $default  reduce using rule 25 (cmp_op)


State 99

   23 cmp_op: NEQ .

    $default  reduce using rule 23 (cmp_op)


State 100

   63 assign_op: ADD_ASSIGN .

    $default  reduce using rule 63 (assign_op)


State 101

   64 assign_op: SUB_ASSIGN .

    $default  reduce using rule 64 (assign_op)


State 102

   65 assign_op: MUL_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 103

   66 assign_op: DIV_ASSIGN .

    $default  reduce using rule 66 (assign_op)


State 104

   67 assign_op: MOD_ASSIGN .

    $default  reduce using rule 67 (assign_op)


State 105

   24 cmp_op: '<' .

    $default  reduce using rule 24 (cmp_op)


State 106

   26 cmp_op: '>' .

    $default  reduce using rule 26 (cmp_op)


State 107

   28 add_op: '+' .

    $default  reduce using rule 28 (add_op)


State 108

   29 add_op: '-' .

    $default  reduce using rule 29 (add_op)


State 109

   30 mul_op: '*' .

    $default  reduce using rule 30 (mul_op)


State 110

   31 mul_op: '/' .

    $default  reduce using rule 31 (mul_op)


State 111

   32 mul_op: '%' .

    $default  reduce using rule 32 (mul_op)


State 112

   62 assign_op: '=' .

    $default  reduce using rule 62 (assign_op)


State 113

   14 Expression: Expression binary_op . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 139
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 114

   19 binary_op: cmp_op .

    $default  reduce using rule 19 (binary_op)


State 115

   20 binary_op: add_op .

    $default  reduce using rule 20 (binary_op)


State 116

   21 binary_op: mul_op .

    $default  reduce using rule 21 (binary_op)


State 117

   61 AssignmentStmt: Expression assign_op . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 140
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 118

   16 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 16 (UnaryExpr)


State 119

   72 StatementList: Statement StatementList .

    $default  reduce using rule 72 (StatementList)


State 120

   47 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 47 (Statement)


State 121

   46 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 46 (Statement)


State 122

   11 FuncBlock: FunctionUpBlock StatementList '}' .

    $default  reduce using rule 11 (FuncBlock)


State 123

   45 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 141
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 124

   54 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 54 (Statement)


State 125

   53 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 53 (Statement)


State 126

   59 DeclarationStmt: VAR IDENT Type .
   60                | VAR IDENT Type . '=' Expression

    '='  shift, and go to state 142

    $default  reduce using rule 59 (DeclarationStmt)


State 127

   74 IfStmt: IF Condition Block .
   75       | IF Condition Block . ELSE IfStmt
   76       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 143

    $default  reduce using rule 74 (IfStmt)


State 128

   79 ForStmt: FOR Condition Block .

    $default  reduce using rule 79 (ForStmt)


State 129

   78 ForStmt: FOR ForClause Block .

    $default  reduce using rule 78 (ForStmt)


State 130

   80 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 76
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Condition       go to state 144
    Type            go to state 71


State 131

   83 SwitchStmt: SWITCH Expression Block .

    $default  reduce using rule 83 (SwitchStmt)


State 132

   84 CaseStmt: CASE INT_LIT ':' . Block

    '{'  shift, and go to state 47

    Block  go to state 145


State 133

   14 Expression: Expression . binary_op Expression
   97 PrintStmt: PRINT '(' Expression . ')'

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    ')'   shift, and go to state 146
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 134

   14 Expression: Expression . binary_op Expression
   98 PrintStmt: PRINTLN '(' Expression . ')'

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    ')'   shift, and go to state 147
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 135

   85 CaseStmt: DEFAULT ':' Block .

    $default  reduce using rule 85 (CaseStmt)


State 136

   40 Operand: '(' Expression ')' .

    $default  reduce using rule 40 (Operand)


State 137

   71 Block: '{' StatementList '}' .

    $default  reduce using rule 71 (Block)


State 138

   44 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 44 (Literal)


State 139

   14 Expression: Expression . binary_op Expression
   14           | Expression binary_op Expression .

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    GEQ       [reduce using rule 14 (Expression)]
    LOR       [reduce using rule 14 (Expression)]
    LAND      [reduce using rule 14 (Expression)]
    EQ        [reduce using rule 14 (Expression)]
    LEQ       [reduce using rule 14 (Expression)]
    NEQ       [reduce using rule 14 (Expression)]
    '<'       [reduce using rule 14 (Expression)]
    '>'       [reduce using rule 14 (Expression)]
    '+'       [reduce using rule 14 (Expression)]
    '-'       [reduce using rule 14 (Expression)]
    '*'       [reduce using rule 14 (Expression)]
    '/'       [reduce using rule 14 (Expression)]
    '%'       [reduce using rule 14 (Expression)]
    $default  reduce using rule 14 (Expression)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 140

   14 Expression: Expression . binary_op Expression
   61 AssignmentStmt: Expression assign_op Expression .

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 61 (AssignmentStmt)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 141

   14 Expression: Expression . binary_op Expression
   45 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    ')'   shift, and go to state 148
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 142

   60 DeclarationStmt: VAR IDENT Type '=' . Expression

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 149
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    Type            go to state 71


State 143

   75 IfStmt: IF Condition Block ELSE . IfStmt
   76       | IF Condition Block ELSE . Block

    IF   shift, and go to state 34
    '{'  shift, and go to state 47

    Block   go to state 150
    IfStmt  go to state 151


State 144

   80 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 152


State 145

   84 CaseStmt: CASE INT_LIT ':' Block .

    $default  reduce using rule 84 (CaseStmt)


State 146

   97 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 97 (PrintStmt)


State 147

   98 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 98 (PrintStmt)


State 148

   45 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 45 (ConversionExpr)


State 149

   14 Expression: Expression . binary_op Expression
   60 DeclarationStmt: VAR IDENT Type '=' Expression .

    GEQ   shift, and go to state 94
    LOR   shift, and go to state 95
    LAND  shift, and go to state 96
    EQ    shift, and go to state 97
    LEQ   shift, and go to state 98
    NEQ   shift, and go to state 99
    '<'   shift, and go to state 105
    '>'   shift, and go to state 106
    '+'   shift, and go to state 107
    '-'   shift, and go to state 108
    '*'   shift, and go to state 109
    '/'   shift, and go to state 110
    '%'   shift, and go to state 111

    $default  reduce using rule 60 (DeclarationStmt)

    binary_op  go to state 113
    cmp_op     go to state 114
    add_op     go to state 115
    mul_op     go to state 116


State 150

   76 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 76 (IfStmt)


State 151

   75 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 75 (IfStmt)


State 152

   80 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 19
    FLOAT      shift, and go to state 20
    BOOL       shift, and go to state 21
    STRING     shift, and go to state 22
    INT_LIT    shift, and go to state 42
    BOOL_LIT   shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    IDENT      shift, and go to state 45
    '('        shift, and go to state 46
    '+'        shift, and go to state 48
    '-'        shift, and go to state 49
    '!'        shift, and go to state 50
    '"'        shift, and go to state 51

    Expression      go to state 52
    UnaryExpr       go to state 53
    unary_op        go to state 54
    PrimaryExpr     go to state 55
    Operand         go to state 56
    Literal         go to state 57
    ConversionExpr  go to state 58
    SimpleStmt      go to state 153
    AssignmentStmt  go to state 62
    ExpressionStmt  go to state 63
    IncDecStmt      go to state 64
    PostStmt        go to state 154
    Type            go to state 71


State 153

   82 PostStmt: SimpleStmt .

    $default  reduce using rule 82 (PostStmt)


State 154

   80 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 80 (ForClause)
