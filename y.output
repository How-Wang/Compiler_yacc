Terminals unused in grammar

   INT
   FLOAT
   BOOL
   STRING


State 136 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 PackageStmt: PACKAGE IDENT

    8 FunctionDeclStmt: FuncOpen '(' ParameterList ')' ReturnType FuncBlock

    9 FuncOpen: FUNC IDENT

   10 Expression: UnaryExpr
   11           | Expression binary_op Expression

   12 UnaryExpr: PrimaryExpr
   13          | unary_op UnaryExpr

   14 binary_op: LOR
   15          | LAND
   16          | cmp_op
   17          | add_op
   18          | mul_op

   19 cmp_op: EQ
   20       | NEQ
   21       | '<'
   22       | LEQ
   23       | '>'
   24       | GEQ

   25 add_op: '+'
   26       | '-'

   27 mul_op: '*'
   28       | '/'
   29       | '%'

   30 unary_op: '+'
   31         | '-'
   32         | '!'

   33 PrimaryExpr: Operand
   34            | IndexExpr
   35            | ConversionExpr

   36 IndexExpr: PrimaryExpr '[' Expression ']'

   37 Operand: Literal
   38        | IDENT
   39        | '(' Expression ')'

   40 Literal: INT_LIT
   41        | FLOAT_LIT
   42        | BOOL_LIT
   43        | '"' STRING_LIT '"'

   44 ConversionExpr: Type '(' Expression ')'

   45 Statement: DeclarationStmt NEWLINE
   46          | SimpleStmt NEWLINE
   47          | Block
   48          | IfStmt
   49          | ForStmt
   50          | SwitchStmt
   51          | CaseStmt
   52          | PrintStmt NEWLINE
   53          | ReturnStmt NEWLINE
   54          | NEWLINE

   55 SimpleStmt: AssignmentStmt
   56           | ExpressionStmt
   57           | IncDecStmt

   58 DeclarationStmt: VAR IDENT Type
   59                | VAR IDENT Type '=' Expression

   60 AssignmentStmt: Expression assign_op Expression

   61 assign_op: '='
   62          | ADD_ASSIGN
   63          | SUB_ASSIGN
   64          | MUL_ASSIGN
   65          | DIV_ASSIGN
   66          | MOD_ASSIGN

   67 ExpressionStmt: Expression

   68 IncDecStmt: Expression INC
   69           | Expression DEC

   70 Block: '{' StatementList '}'

   71 StatementList: Statement StatementList
   72              | Statement

   73 IfStmt: IF Condition Block
   74       | IF Condition Block ELSE IfStmt
   75       | IF Condition Block ELSE Block

   76 Condition: Expression

   77 ForStmt: FOR ForClause Block
   78        | FOR Condition Block

   79 ForClause: InitStmt ';' Condition ';' PostStmt

   80 InitStmt: SimpleStmt

   81 PostStmt: SimpleStmt

   82 SwitchStmt: SWITCH Expression Block

   83 CaseStmt: CASE INT_LIT ':' Block
   84         | DEFAULT ':' Block

   85 ReturnType: Type

   86 ParameterList: %empty
   87              | IDENT Type
   88              | ParameterList ',' IDENT Type

   89 FuncBlock: '{' StatementList '}'

   90 ReturnStmt: RETURN Expression
   91           | RETURN

   92 PrintStmt: PRINT '(' Expression ')'
   93          | PRINTLN '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 32
'"' (34) 43
'%' (37) 29
'(' (40) 8 39 44 92 93
')' (41) 8 39 44 92 93
'*' (42) 27
'+' (43) 25 30
',' (44) 88
'-' (45) 26 31
'/' (47) 28
':' (58) 83 84
';' (59) 79
'<' (60) 21
'=' (61) 59 61
'>' (62) 23
'[' (91) 36
']' (93) 36
'{' (123) 70 89
'}' (125) 70 89
error (256)
VAR (258) 58 59
NEWLINE (259) 4 6 45 46 52 53 54
INT (260)
FLOAT (261)
BOOL (262)
STRING (263)
INC (264) 68
DEC (265) 69
GEQ (266) 24
LOR (267) 14
LAND (268) 15
EQ (269) 19
LEQ (270) 22
NEQ (271) 20
ADD_ASSIGN (272) 62
SUB_ASSIGN (273) 63
MUL_ASSIGN (274) 64
DIV_ASSIGN (275) 65
MOD_ASSIGN (276) 66
IF (277) 73 74 75
ELSE (278) 74 75
FOR (279) 77 78
SWITCH (280) 82
CASE (281) 83
FUNC (282) 9
PRINT (283) 92
PACKAGE (284) 7
RETURN (285) 90 91
PRINTLN (286) 93
Type (287) 44 58 59 85 87 88
DEFAULT (288) 84
INT_LIT (289) 40 83
STRING_LIT (290) 43
BOOL_LIT (291) 42
FLOAT_LIT (292) 41
IDENT (293) 7 9 38 58 59 87 88


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
Program (59)
    on left: 1, on right: 0
GlobalStatementList (60)
    on left: 2 3, on right: 1 2
GlobalStatement (61)
    on left: 4 5 6, on right: 2 3
PackageStmt (62)
    on left: 7, on right: 4
FunctionDeclStmt (63)
    on left: 8, on right: 5
FuncOpen (64)
    on left: 9, on right: 8
Expression (65)
    on left: 10 11, on right: 11 36 39 44 59 60 67 68 69 76 82 90 92
    93
UnaryExpr (66)
    on left: 12 13, on right: 10 13
binary_op (67)
    on left: 14 15 16 17 18, on right: 11
cmp_op (68)
    on left: 19 20 21 22 23 24, on right: 16
add_op (69)
    on left: 25 26, on right: 17
mul_op (70)
    on left: 27 28 29, on right: 18
unary_op (71)
    on left: 30 31 32, on right: 13
PrimaryExpr (72)
    on left: 33 34 35, on right: 12 36
IndexExpr (73)
    on left: 36, on right: 34
Operand (74)
    on left: 37 38 39, on right: 33
Literal (75)
    on left: 40 41 42 43, on right: 37
ConversionExpr (76)
    on left: 44, on right: 35
Statement (77)
    on left: 45 46 47 48 49 50 51 52 53 54, on right: 71 72
SimpleStmt (78)
    on left: 55 56 57, on right: 46 80 81
DeclarationStmt (79)
    on left: 58 59, on right: 45
AssignmentStmt (80)
    on left: 60, on right: 55
assign_op (81)
    on left: 61 62 63 64 65 66, on right: 60
ExpressionStmt (82)
    on left: 67, on right: 56
IncDecStmt (83)
    on left: 68 69, on right: 57
Block (84)
    on left: 70, on right: 47 73 74 75 77 78 82 83 84
StatementList (85)
    on left: 71 72, on right: 70 71 89
IfStmt (86)
    on left: 73 74 75, on right: 48 74
Condition (87)
    on left: 76, on right: 73 74 75 78 79
ForStmt (88)
    on left: 77 78, on right: 49
ForClause (89)
    on left: 79, on right: 77
InitStmt (90)
    on left: 80, on right: 79
PostStmt (91)
    on left: 81, on right: 79
SwitchStmt (92)
    on left: 82, on right: 50
CaseStmt (93)
    on left: 83 84, on right: 51
ReturnType (94)
    on left: 85, on right: 8
ParameterList (95)
    on left: 86 87 88, on right: 8 88
FuncBlock (96)
    on left: 89, on right: 8
ReturnStmt (97)
    on left: 90 91, on right: 53
PrintStmt (98)
    on left: 92 93, on right: 52


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

    9 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 10


State 3

    7 PackageStmt: PACKAGE . IDENT

    IDENT  shift, and go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2
    PACKAGE  shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FuncOpen . '(' ParameterList ')' ReturnType FuncBlock

    '('  shift, and go to state 15


State 10

    9 FuncOpen: FUNC IDENT .

    $default  reduce using rule 9 (FuncOpen)


State 11

    7 PackageStmt: PACKAGE IDENT .

    $default  reduce using rule 7 (PackageStmt)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 15

    8 FunctionDeclStmt: FuncOpen '(' . ParameterList ')' ReturnType FuncBlock

    IDENT  shift, and go to state 16

    $default  reduce using rule 86 (ParameterList)

    ParameterList  go to state 17


State 16

   87 ParameterList: IDENT . Type

    Type  shift, and go to state 18


State 17

    8 FunctionDeclStmt: FuncOpen '(' ParameterList . ')' ReturnType FuncBlock
   88 ParameterList: ParameterList . ',' IDENT Type

    ')'  shift, and go to state 19
    ','  shift, and go to state 20


State 18

   87 ParameterList: IDENT Type .

    $default  reduce using rule 87 (ParameterList)


State 19

    8 FunctionDeclStmt: FuncOpen '(' ParameterList ')' . ReturnType FuncBlock

    Type  shift, and go to state 21

    ReturnType  go to state 22


State 20

   88 ParameterList: ParameterList ',' . IDENT Type

    IDENT  shift, and go to state 23


State 21

   85 ReturnType: Type .

    $default  reduce using rule 85 (ReturnType)


State 22

    8 FunctionDeclStmt: FuncOpen '(' ParameterList ')' ReturnType . FuncBlock

    '{'  shift, and go to state 24

    FuncBlock  go to state 25


State 23

   88 ParameterList: ParameterList ',' IDENT . Type

    Type  shift, and go to state 26


State 24

   89 FuncBlock: '{' . StatementList '}'

    VAR        shift, and go to state 27
    NEWLINE    shift, and go to state 28
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    SWITCH     shift, and go to state 31
    CASE       shift, and go to state 32
    PRINT      shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINTLN    shift, and go to state 35
    Type       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46
    '{'        shift, and go to state 47

    Expression       go to state 48
    UnaryExpr        go to state 49
    unary_op         go to state 50
    PrimaryExpr      go to state 51
    IndexExpr        go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55
    Statement        go to state 56
    SimpleStmt       go to state 57
    DeclarationStmt  go to state 58
    AssignmentStmt   go to state 59
    ExpressionStmt   go to state 60
    IncDecStmt       go to state 61
    Block            go to state 62
    StatementList    go to state 63
    IfStmt           go to state 64
    ForStmt          go to state 65
    SwitchStmt       go to state 66
    CaseStmt         go to state 67
    ReturnStmt       go to state 68
    PrintStmt        go to state 69


State 25

    8 FunctionDeclStmt: FuncOpen '(' ParameterList ')' ReturnType FuncBlock .

    $default  reduce using rule 8 (FunctionDeclStmt)


State 26

   88 ParameterList: ParameterList ',' IDENT Type .

    $default  reduce using rule 88 (ParameterList)


State 27

   58 DeclarationStmt: VAR . IDENT Type
   59                | VAR . IDENT Type '=' Expression

    IDENT  shift, and go to state 70


State 28

   54 Statement: NEWLINE .

    $default  reduce using rule 54 (Statement)


State 29

   73 IfStmt: IF . Condition Block
   74       | IF . Condition Block ELSE IfStmt
   75       | IF . Condition Block ELSE Block

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 71
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55
    Condition       go to state 72


State 30

   77 ForStmt: FOR . ForClause Block
   78        | FOR . Condition Block

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 73
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55
    SimpleStmt      go to state 74
    AssignmentStmt  go to state 59
    ExpressionStmt  go to state 60
    IncDecStmt      go to state 61
    Condition       go to state 75
    ForClause       go to state 76
    InitStmt        go to state 77


State 31

   82 SwitchStmt: SWITCH . Expression Block

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 78
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 32

   83 CaseStmt: CASE . INT_LIT ':' Block

    INT_LIT  shift, and go to state 79


State 33

   92 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 80


State 34

   90 ReturnStmt: RETURN . Expression
   91           | RETURN .

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    $default  reduce using rule 91 (ReturnStmt)

    Expression      go to state 81
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 35

   93 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 82


State 36

   44 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 83


State 37

   84 CaseStmt: DEFAULT . ':' Block

    ':'  shift, and go to state 84


State 38

   40 Literal: INT_LIT .

    $default  reduce using rule 40 (Literal)


State 39

   42 Literal: BOOL_LIT .

    $default  reduce using rule 42 (Literal)


State 40

   41 Literal: FLOAT_LIT .

    $default  reduce using rule 41 (Literal)


State 41

   38 Operand: IDENT .

    $default  reduce using rule 38 (Operand)


State 42

   39 Operand: '(' . Expression ')'

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 85
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 43

   30 unary_op: '+' .

    $default  reduce using rule 30 (unary_op)


State 44

   31 unary_op: '-' .

    $default  reduce using rule 31 (unary_op)


State 45

   32 unary_op: '!' .

    $default  reduce using rule 32 (unary_op)


State 46

   43 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 86


State 47

   70 Block: '{' . StatementList '}'

    VAR        shift, and go to state 27
    NEWLINE    shift, and go to state 28
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    SWITCH     shift, and go to state 31
    CASE       shift, and go to state 32
    PRINT      shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINTLN    shift, and go to state 35
    Type       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46
    '{'        shift, and go to state 47

    Expression       go to state 48
    UnaryExpr        go to state 49
    unary_op         go to state 50
    PrimaryExpr      go to state 51
    IndexExpr        go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55
    Statement        go to state 56
    SimpleStmt       go to state 57
    DeclarationStmt  go to state 58
    AssignmentStmt   go to state 59
    ExpressionStmt   go to state 60
    IncDecStmt       go to state 61
    Block            go to state 62
    StatementList    go to state 87
    IfStmt           go to state 64
    ForStmt          go to state 65
    SwitchStmt       go to state 66
    CaseStmt         go to state 67
    ReturnStmt       go to state 68
    PrintStmt        go to state 69


State 48

   11 Expression: Expression . binary_op Expression
   60 AssignmentStmt: Expression . assign_op Expression
   67 ExpressionStmt: Expression .
   68 IncDecStmt: Expression . INC
   69           | Expression . DEC

    INC         shift, and go to state 88
    DEC         shift, and go to state 89
    GEQ         shift, and go to state 90
    LOR         shift, and go to state 91
    LAND        shift, and go to state 92
    EQ          shift, and go to state 93
    LEQ         shift, and go to state 94
    NEQ         shift, and go to state 95
    ADD_ASSIGN  shift, and go to state 96
    SUB_ASSIGN  shift, and go to state 97
    MUL_ASSIGN  shift, and go to state 98
    DIV_ASSIGN  shift, and go to state 99
    MOD_ASSIGN  shift, and go to state 100
    '<'         shift, and go to state 101
    '>'         shift, and go to state 102
    '+'         shift, and go to state 103
    '-'         shift, and go to state 104
    '*'         shift, and go to state 105
    '/'         shift, and go to state 106
    '%'         shift, and go to state 107
    '='         shift, and go to state 108

    $default  reduce using rule 67 (ExpressionStmt)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112
    assign_op  go to state 113


State 49

   10 Expression: UnaryExpr .

    $default  reduce using rule 10 (Expression)


State 50

   13 UnaryExpr: unary_op . UnaryExpr

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    UnaryExpr       go to state 114
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 51

   12 UnaryExpr: PrimaryExpr .
   36 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 115

    $default  reduce using rule 12 (UnaryExpr)


State 52

   34 PrimaryExpr: IndexExpr .

    $default  reduce using rule 34 (PrimaryExpr)


State 53

   33 PrimaryExpr: Operand .

    $default  reduce using rule 33 (PrimaryExpr)


State 54

   37 Operand: Literal .

    $default  reduce using rule 37 (Operand)


State 55

   35 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 35 (PrimaryExpr)


State 56

   71 StatementList: Statement . StatementList
   72              | Statement .

    VAR        shift, and go to state 27
    NEWLINE    shift, and go to state 28
    IF         shift, and go to state 29
    FOR        shift, and go to state 30
    SWITCH     shift, and go to state 31
    CASE       shift, and go to state 32
    PRINT      shift, and go to state 33
    RETURN     shift, and go to state 34
    PRINTLN    shift, and go to state 35
    Type       shift, and go to state 36
    DEFAULT    shift, and go to state 37
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46
    '{'        shift, and go to state 47

    $default  reduce using rule 72 (StatementList)

    Expression       go to state 48
    UnaryExpr        go to state 49
    unary_op         go to state 50
    PrimaryExpr      go to state 51
    IndexExpr        go to state 52
    Operand          go to state 53
    Literal          go to state 54
    ConversionExpr   go to state 55
    Statement        go to state 56
    SimpleStmt       go to state 57
    DeclarationStmt  go to state 58
    AssignmentStmt   go to state 59
    ExpressionStmt   go to state 60
    IncDecStmt       go to state 61
    Block            go to state 62
    StatementList    go to state 116
    IfStmt           go to state 64
    ForStmt          go to state 65
    SwitchStmt       go to state 66
    CaseStmt         go to state 67
    ReturnStmt       go to state 68
    PrintStmt        go to state 69


State 57

   46 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 117


State 58

   45 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 118


State 59

   55 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 55 (SimpleStmt)


State 60

   56 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 56 (SimpleStmt)


State 61

   57 SimpleStmt: IncDecStmt .

    $default  reduce using rule 57 (SimpleStmt)


State 62

   47 Statement: Block .

    $default  reduce using rule 47 (Statement)


State 63

   89 FuncBlock: '{' StatementList . '}'

    '}'  shift, and go to state 119


State 64

   48 Statement: IfStmt .

    $default  reduce using rule 48 (Statement)


State 65

   49 Statement: ForStmt .

    $default  reduce using rule 49 (Statement)


State 66

   50 Statement: SwitchStmt .

    $default  reduce using rule 50 (Statement)


State 67

   51 Statement: CaseStmt .

    $default  reduce using rule 51 (Statement)


State 68

   53 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 120


State 69

   52 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 121


State 70

   58 DeclarationStmt: VAR IDENT . Type
   59                | VAR IDENT . Type '=' Expression

    Type  shift, and go to state 122


State 71

   11 Expression: Expression . binary_op Expression
   76 Condition: Expression .

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    $default  reduce using rule 76 (Condition)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 72

   73 IfStmt: IF Condition . Block
   74       | IF Condition . Block ELSE IfStmt
   75       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 47

    Block  go to state 123


State 73

   11 Expression: Expression . binary_op Expression
   60 AssignmentStmt: Expression . assign_op Expression
   67 ExpressionStmt: Expression .
   68 IncDecStmt: Expression . INC
   69           | Expression . DEC
   76 Condition: Expression .

    INC         shift, and go to state 88
    DEC         shift, and go to state 89
    GEQ         shift, and go to state 90
    LOR         shift, and go to state 91
    LAND        shift, and go to state 92
    EQ          shift, and go to state 93
    LEQ         shift, and go to state 94
    NEQ         shift, and go to state 95
    ADD_ASSIGN  shift, and go to state 96
    SUB_ASSIGN  shift, and go to state 97
    MUL_ASSIGN  shift, and go to state 98
    DIV_ASSIGN  shift, and go to state 99
    MOD_ASSIGN  shift, and go to state 100
    '<'         shift, and go to state 101
    '>'         shift, and go to state 102
    '+'         shift, and go to state 103
    '-'         shift, and go to state 104
    '*'         shift, and go to state 105
    '/'         shift, and go to state 106
    '%'         shift, and go to state 107
    '='         shift, and go to state 108

    '{'       reduce using rule 76 (Condition)
    $default  reduce using rule 67 (ExpressionStmt)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112
    assign_op  go to state 113


State 74

   80 InitStmt: SimpleStmt .

    $default  reduce using rule 80 (InitStmt)


State 75

   78 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 47

    Block  go to state 124


State 76

   77 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 47

    Block  go to state 125


State 77

   79 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 126


State 78

   11 Expression: Expression . binary_op Expression
   82 SwitchStmt: SWITCH Expression . Block

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107
    '{'   shift, and go to state 47

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112
    Block      go to state 127


State 79

   83 CaseStmt: CASE INT_LIT . ':' Block

    ':'  shift, and go to state 128


State 80

   92 PrintStmt: PRINT '(' . Expression ')'

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 129
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 81

   11 Expression: Expression . binary_op Expression
   90 ReturnStmt: RETURN Expression .

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    $default  reduce using rule 90 (ReturnStmt)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 82

   93 PrintStmt: PRINTLN '(' . Expression ')'

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 130
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 83

   44 ConversionExpr: Type '(' . Expression ')'

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 131
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 84

   84 CaseStmt: DEFAULT ':' . Block

    '{'  shift, and go to state 47

    Block  go to state 132


State 85

   11 Expression: Expression . binary_op Expression
   39 Operand: '(' Expression . ')'

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    ')'   shift, and go to state 133
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 86

   43 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 134


State 87

   70 Block: '{' StatementList . '}'

    '}'  shift, and go to state 135


State 88

   68 IncDecStmt: Expression INC .

    $default  reduce using rule 68 (IncDecStmt)


State 89

   69 IncDecStmt: Expression DEC .

    $default  reduce using rule 69 (IncDecStmt)


State 90

   24 cmp_op: GEQ .

    $default  reduce using rule 24 (cmp_op)


State 91

   14 binary_op: LOR .

    $default  reduce using rule 14 (binary_op)


State 92

   15 binary_op: LAND .

    $default  reduce using rule 15 (binary_op)


State 93

   19 cmp_op: EQ .

    $default  reduce using rule 19 (cmp_op)


State 94

   22 cmp_op: LEQ .

    $default  reduce using rule 22 (cmp_op)


State 95

   20 cmp_op: NEQ .

    $default  reduce using rule 20 (cmp_op)


State 96

   62 assign_op: ADD_ASSIGN .

    $default  reduce using rule 62 (assign_op)


State 97

   63 assign_op: SUB_ASSIGN .

    $default  reduce using rule 63 (assign_op)


State 98

   64 assign_op: MUL_ASSIGN .

    $default  reduce using rule 64 (assign_op)


State 99

   65 assign_op: DIV_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 100

   66 assign_op: MOD_ASSIGN .

    $default  reduce using rule 66 (assign_op)


State 101

   21 cmp_op: '<' .

    $default  reduce using rule 21 (cmp_op)


State 102

   23 cmp_op: '>' .

    $default  reduce using rule 23 (cmp_op)


State 103

   25 add_op: '+' .

    $default  reduce using rule 25 (add_op)


State 104

   26 add_op: '-' .

    $default  reduce using rule 26 (add_op)


State 105

   27 mul_op: '*' .

    $default  reduce using rule 27 (mul_op)


State 106

   28 mul_op: '/' .

    $default  reduce using rule 28 (mul_op)


State 107

   29 mul_op: '%' .

    $default  reduce using rule 29 (mul_op)


State 108

   61 assign_op: '=' .

    $default  reduce using rule 61 (assign_op)


State 109

   11 Expression: Expression binary_op . Expression

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 136
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 110

   16 binary_op: cmp_op .

    $default  reduce using rule 16 (binary_op)


State 111

   17 binary_op: add_op .

    $default  reduce using rule 17 (binary_op)


State 112

   18 binary_op: mul_op .

    $default  reduce using rule 18 (binary_op)


State 113

   60 AssignmentStmt: Expression assign_op . Expression

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 137
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 114

   13 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 13 (UnaryExpr)


State 115

   36 IndexExpr: PrimaryExpr '[' . Expression ']'

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 138
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 116

   71 StatementList: Statement StatementList .

    $default  reduce using rule 71 (StatementList)


State 117

   46 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 46 (Statement)


State 118

   45 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 45 (Statement)


State 119

   89 FuncBlock: '{' StatementList '}' .

    $default  reduce using rule 89 (FuncBlock)


State 120

   53 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 53 (Statement)


State 121

   52 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 52 (Statement)


State 122

   58 DeclarationStmt: VAR IDENT Type .
   59                | VAR IDENT Type . '=' Expression

    '='  shift, and go to state 139

    $default  reduce using rule 58 (DeclarationStmt)


State 123

   73 IfStmt: IF Condition Block .
   74       | IF Condition Block . ELSE IfStmt
   75       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 140

    $default  reduce using rule 73 (IfStmt)


State 124

   78 ForStmt: FOR Condition Block .

    $default  reduce using rule 78 (ForStmt)


State 125

   77 ForStmt: FOR ForClause Block .

    $default  reduce using rule 77 (ForStmt)


State 126

   79 ForClause: InitStmt ';' . Condition ';' PostStmt

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 71
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55
    Condition       go to state 141


State 127

   82 SwitchStmt: SWITCH Expression Block .

    $default  reduce using rule 82 (SwitchStmt)


State 128

   83 CaseStmt: CASE INT_LIT ':' . Block

    '{'  shift, and go to state 47

    Block  go to state 142


State 129

   11 Expression: Expression . binary_op Expression
   92 PrintStmt: PRINT '(' Expression . ')'

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    ')'   shift, and go to state 143
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 130

   11 Expression: Expression . binary_op Expression
   93 PrintStmt: PRINTLN '(' Expression . ')'

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    ')'   shift, and go to state 144
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 131

   11 Expression: Expression . binary_op Expression
   44 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    ')'   shift, and go to state 145
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 132

   84 CaseStmt: DEFAULT ':' Block .

    $default  reduce using rule 84 (CaseStmt)


State 133

   39 Operand: '(' Expression ')' .

    $default  reduce using rule 39 (Operand)


State 134

   43 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 43 (Literal)


State 135

   70 Block: '{' StatementList '}' .

    $default  reduce using rule 70 (Block)


State 136

   11 Expression: Expression . binary_op Expression
   11           | Expression binary_op Expression .

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    GEQ       [reduce using rule 11 (Expression)]
    LOR       [reduce using rule 11 (Expression)]
    LAND      [reduce using rule 11 (Expression)]
    EQ        [reduce using rule 11 (Expression)]
    LEQ       [reduce using rule 11 (Expression)]
    NEQ       [reduce using rule 11 (Expression)]
    '<'       [reduce using rule 11 (Expression)]
    '>'       [reduce using rule 11 (Expression)]
    '+'       [reduce using rule 11 (Expression)]
    '-'       [reduce using rule 11 (Expression)]
    '*'       [reduce using rule 11 (Expression)]
    '/'       [reduce using rule 11 (Expression)]
    '%'       [reduce using rule 11 (Expression)]
    $default  reduce using rule 11 (Expression)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 137

   11 Expression: Expression . binary_op Expression
   60 AssignmentStmt: Expression assign_op Expression .

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    $default  reduce using rule 60 (AssignmentStmt)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 138

   11 Expression: Expression . binary_op Expression
   36 IndexExpr: PrimaryExpr '[' Expression . ']'

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107
    ']'   shift, and go to state 146

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 139

   59 DeclarationStmt: VAR IDENT Type '=' . Expression

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 147
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55


State 140

   74 IfStmt: IF Condition Block ELSE . IfStmt
   75       | IF Condition Block ELSE . Block

    IF   shift, and go to state 29
    '{'  shift, and go to state 47

    Block   go to state 148
    IfStmt  go to state 149


State 141

   79 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 150


State 142

   83 CaseStmt: CASE INT_LIT ':' Block .

    $default  reduce using rule 83 (CaseStmt)


State 143

   92 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 92 (PrintStmt)


State 144

   93 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 93 (PrintStmt)


State 145

   44 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 44 (ConversionExpr)


State 146

   36 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 36 (IndexExpr)


State 147

   11 Expression: Expression . binary_op Expression
   59 DeclarationStmt: VAR IDENT Type '=' Expression .

    GEQ   shift, and go to state 90
    LOR   shift, and go to state 91
    LAND  shift, and go to state 92
    EQ    shift, and go to state 93
    LEQ   shift, and go to state 94
    NEQ   shift, and go to state 95
    '<'   shift, and go to state 101
    '>'   shift, and go to state 102
    '+'   shift, and go to state 103
    '-'   shift, and go to state 104
    '*'   shift, and go to state 105
    '/'   shift, and go to state 106
    '%'   shift, and go to state 107

    $default  reduce using rule 59 (DeclarationStmt)

    binary_op  go to state 109
    cmp_op     go to state 110
    add_op     go to state 111
    mul_op     go to state 112


State 148

   75 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 75 (IfStmt)


State 149

   74 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 74 (IfStmt)


State 150

   79 ForClause: InitStmt ';' Condition ';' . PostStmt

    Type       shift, and go to state 36
    INT_LIT    shift, and go to state 38
    BOOL_LIT   shift, and go to state 39
    FLOAT_LIT  shift, and go to state 40
    IDENT      shift, and go to state 41
    '('        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45
    '"'        shift, and go to state 46

    Expression      go to state 48
    UnaryExpr       go to state 49
    unary_op        go to state 50
    PrimaryExpr     go to state 51
    IndexExpr       go to state 52
    Operand         go to state 53
    Literal         go to state 54
    ConversionExpr  go to state 55
    SimpleStmt      go to state 151
    AssignmentStmt  go to state 59
    ExpressionStmt  go to state 60
    IncDecStmt      go to state 61
    PostStmt        go to state 152


State 151

   81 PostStmt: SimpleStmt .

    $default  reduce using rule 81 (PostStmt)


State 152

   79 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 79 (ForClause)
